(Node (Driven)(0 )()(()((call LogAnd(arg (call Cont_ab(arg (par e i )))(call IsEqual(arg (*(par e i ))(*(call Repl_a_v(arg (call Repl_a_v(arg (par e x ))))))))))))(Children (Node (Driven)(0 0 )((assign (par e i )((par e 1 )fabac(par e 2 ))))(let (assign (par e 67 )())(assign (par e 68 )((par e x )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(call Repl_a_v(arg (par e 67 )(call Repl_a_v(arg (par e 68 ))))))))))))(Children (Node (Driven)(0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(call Repl_a_v(arg (par e 67 )(call Repl_a_v(arg (par e 68 ))))))))))))(Children (Node (Finished)(0 0 0 0 )((assign (par e 68 )((par e 512 )ab(par e 513 ))))(let (assign (par e 686 )((par e 67 )(par e 512 )ba))(assign (par e 687 )((par e 513 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(call Repl_a_v(arg (par e 686 )(call Repl_a_v(arg (par e 687 ))))))))))))(Children (Node (Looped )(0 0 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(call Repl_a_v(arg (par e 686 )(call Repl_a_v(arg (par e 687 ))))))))))))(Looped to (0 0 0 )((assign (par e 67 )((par e 686 )))(assign (par e 68 )((par e 687 ))))))(Node (Finished)(0 0 0 0 1 )()(()((par e 67 )(par e 512 )ba)))(Node (Finished)(0 0 0 0 2 )()(()((par e 513 ))))))(Node (Driven)(0 0 0 1 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(call Repl_a_v(arg (par e 67 )(par e 68 ))))))))))(Children (Node (Finished)(0 0 0 1 0 )((assign (par e 67 )((par e 719 )ab(par e 720 ))))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(par e 719 )ba(call Repl_a_v(arg (par e 720 )(par e 68 ))))))))))(Children (Node (Finished)(0 0 0 1 0 0 )((assign (par e 1 )((par s 3 )(par e 781 )))(assign (par e 719 )((par s 4 )(par e 782 )))(assign (par s 4 )((par s 3 ))))(let (assign (par e 1 )((par e 781 )))(assign (par e 719 )((par e 782 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(par e 719 )ba(call Repl_a_v(arg (par e 720 )(par e 68 ))))))))))(Children (Node (Looped )(0 0 0 1 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(par e 719 )ba(call Repl_a_v(arg (par e 720 )(par e 68 ))))))))))(Looped to (0 0 0 1 0 )((assign (par e 1 )((par e 781 )))(assign (par e 719 )((par e 782 ))))))(Node (Finished)(0 0 0 1 0 0 1 )()(()((par e 781 ))))(Node (Finished)(0 0 0 1 0 0 2 )()(()((par e 782 ))))))(Node (Finished)(0 0 0 1 0 1 )((assign (par e 1 )((par s 3 )(par e 781 )))(assign (par e 719 )())(assign (par s 3 )(b)))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 781 )fabac(par e 2 ))(*a(call Repl_a_v(arg (par e 720 )(par e 68 ))))))))))(Children (Node (Finished)(0 0 0 1 0 1 0 )((assign (par e 781 )((par s 11 )(par e 973 )))(assign (par s 11 )(a)))(let (assign (par e 1 )((par e 973 )))(assign (par e 67 )((par e 720 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(call Repl_a_v(arg (par e 67 )(par e 68 ))))))))))(Children (Node (Looped )(0 0 0 1 0 1 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(call Repl_a_v(arg (par e 67 )(par e 68 ))))))))))(Looped to (0 0 0 1 )((assign (par e 1 )((par e 973 )))(assign (par e 67 )((par e 720 ))))))(Node (Finished)(0 0 0 1 0 1 0 1 )()(()((par e 973 ))))(Node (Finished)(0 0 0 1 0 1 0 2 )()(()((par e 720 ))))))(Node (Finished)(0 0 0 1 0 1 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 1 1 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 )((assign (par e 1 )())(assign (par e 719 )((par s 5 )(par e 783 )))(assign (par s 5 )(f)))(()((call LogAnd(arg True (call IsEqual(arg (*abac(par e 2 ))(*(par e 783 )ba(call Repl_a_v(arg (par e 720 )(par e 68 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 )((assign (par e 783 )((par s 13 )(par e 1134 )))(assign (par s 13 )(a)))(()((call LogAnd(arg True (call IsEqual(arg (*bac(par e 2 ))(*(par e 1134 )ba(call Repl_a_v(arg (par e 720 )(par e 68 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 )((assign (par e 1134 )()))(()((call LogAnd(arg True (call IsEqual(arg (*ac(par e 2 ))(*a(call Repl_a_v(arg (par e 720 )(par e 68 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*c(par e 2 ))(*(call Repl_a_v(arg (par e 720 )(par e 68 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 )((assign (par e 720 )((par e 1234 )ab(par e 1235 ))))(()((call LogAnd(arg True (call IsEqual(arg (*c(par e 2 ))(*(par e 1234 )ba(call Repl_a_v(arg (par e 1235 )(par e 68 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 )((assign (par e 1234 )((par s 15 )(par e 1286 )))(assign (par s 15 )(c)))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 1286 )ba(call Repl_a_v(arg (par e 1235 )(par e 68 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 0 )((assign (par e 2 )((par s 16 )(par e 1321 )))(assign (par e 1286 )((par s 17 )(par e 1322 )))(assign (par s 17 )((par s 16 ))))(let (assign (par e 2 )((par e 1321 )))(assign (par e 1286 )((par e 1322 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 1286 )ba(call Repl_a_v(arg (par e 1235 )(par e 68 ))))))))))(Children (Node (Looped )(0 0 0 1 0 2 0 0 0 0 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 1286 )ba(call Repl_a_v(arg (par e 1235 )(par e 68 ))))))))))(Looped to (0 0 0 1 0 2 0 0 0 0 0 )((assign (par e 2 )((par e 1321 )))(assign (par e 1286 )((par e 1322 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 0 1 )()(()((par e 1321 ))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 0 2 )()(()((par e 1322 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 )((assign (par e 2 )((par s 16 )(par e 1321 )))(assign (par e 1286 )())(assign (par s 16 )(b)))(let (assign (par e 1574 )((par e 1321 )))(assign (par e 1578 )())(assign (par e 1677 )((par e 1235 )(par e 68 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 1574 ))(*(par e 1578 )a(call Repl_a_v(arg (par e 1677 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1574 ))(*(par e 1578 )a(call Repl_a_v(arg (par e 1677 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 0 )((assign (par e 1574 )((par s 27 )(par e 1814 )))(assign (par e 1578 )((par s 28 )(par e 1815 )))(assign (par s 28 )((par s 27 ))))(let (assign (par e 1574 )((par e 1814 )))(assign (par e 1578 )((par e 1815 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 1574 ))(*(par e 1578 )a(call Repl_a_v(arg (par e 1677 ))))))))))(Children (Node (Looped )(0 0 0 1 0 2 0 0 0 0 0 1 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1574 ))(*(par e 1578 )a(call Repl_a_v(arg (par e 1677 ))))))))))(Looped to (0 0 0 1 0 2 0 0 0 0 0 1 0 )((assign (par e 1574 )((par e 1814 )))(assign (par e 1578 )((par e 1815 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 0 1 )()(()((par e 1814 ))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 0 2 )()(()((par e 1815 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 )((assign (par e 1574 )((par s 27 )(par e 1814 )))(assign (par e 1578 )())(assign (par s 27 )(a)))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1814 ))(*(call Repl_a_v(arg (par e 1677 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 0 )((assign (par e 1677 )((par e 1934 )ab(par e 1935 ))))(let (assign (par e 2003 )((par e 1814 )))(assign (par e 2007 )((par e 1934 )b))(assign (par e 2010 )((par e 1935 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 2003 ))(*(par e 2007 )a(call Repl_a_v(arg (par e 2010 ))))))))))(Children (Node (Looped )(0 0 0 1 0 2 0 0 0 0 0 1 0 1 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2003 ))(*(par e 2007 )a(call Repl_a_v(arg (par e 2010 ))))))))))(Looped to (0 0 0 1 0 2 0 0 0 0 0 1 0 )((assign (par e 1574 )((par e 2003 )))(assign (par e 1578 )((par e 2007 )))(assign (par e 1677 )((par e 2010 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 0 1 )()(()((par e 1814 ))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 0 2 )()(()((par e 1934 )b)))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 0 3 )()(()((par e 1935 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 1 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1814 ))(*(par e 1677 ))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 1 0 )((assign (par e 1814 )((par s 37 )(par e 2042 )))(assign (par e 1677 )((par s 37 )(par e 2043 ))))(let (assign (par e 1814 )((par e 2042 )))(assign (par e 1677 )((par e 2043 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 1814 ))(*(par e 1677 ))))))))(Children (Node (Looped )(0 0 0 1 0 2 0 0 0 0 0 1 0 1 1 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1814 ))(*(par e 1677 ))))))))(Looped to (0 0 0 1 0 2 0 0 0 0 0 1 0 1 1 )((assign (par e 1814 )((par e 2042 )))(assign (par e 1677 )((par e 2043 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 1 0 1 )()(()((par e 2042 ))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 1 0 2 )()(()((par e 2043 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 1 1 )((assign (par e 1814 )())(assign (par e 1677 )()))(()((call LogAnd(arg True True ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 1 1 0 )()(()(True )))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 1 2 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 1 1 2 0 )()(()(False )))))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 2 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 0 2 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 1 )()(()((par e 1321 ))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 2 )()(()()))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 1 3 )()(()((par e 1235 )(par e 68 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 2 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 0 2 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 0 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 0 1 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 )((assign (par e 720 )((par e 1234 )a))(assign (par e 68 )(b(par e 1236 ))))(()((call LogAnd(arg True (call IsEqual(arg (*c(par e 2 ))(*(par e 1234 )ba(call Repl_a_v(arg (par e 1236 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 )((assign (par e 1234 )((par s 44 )(par e 2209 )))(assign (par s 44 )(c)))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 2209 )ba(call Repl_a_v(arg (par e 1236 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 0 )((assign (par e 2 )((par s 45 )(par e 2235 )))(assign (par e 2209 )((par s 46 )(par e 2236 )))(assign (par s 46 )((par s 45 ))))(let (assign (par e 2 )((par e 2235 )))(assign (par e 2209 )((par e 2236 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 2209 )ba(call Repl_a_v(arg (par e 1236 ))))))))))(Children (Node (Looped )(0 0 0 1 0 2 0 0 0 1 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 2209 )ba(call Repl_a_v(arg (par e 1236 ))))))))))(Looped to (0 0 0 1 0 2 0 0 0 1 0 )((assign (par e 2 )((par e 2235 )))(assign (par e 2209 )((par e 2236 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 0 1 )()(()((par e 2235 ))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 0 2 )()(()((par e 2236 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 )((assign (par e 2 )((par s 45 )(par e 2235 )))(assign (par e 2209 )())(assign (par s 45 )(b)))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2235 ))(*a(call Repl_a_v(arg (par e 1236 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 0 )((assign (par e 2235 )((par s 51 )(par e 2330 )))(assign (par s 51 )(a)))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2330 ))(*(call Repl_a_v(arg (par e 1236 ))))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2330 ))(*(par e 1236 ))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 0 0 0 )((assign (par e 2330 )((par s 53 )(par e 2367 )))(assign (par e 1236 )((par s 53 )(par e 2368 ))))(let (assign (par e 2330 )((par e 2367 )))(assign (par e 1236 )((par e 2368 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 2330 ))(*(par e 1236 ))))))))(Children (Node (Looped )(0 0 0 1 0 2 0 0 0 1 0 1 0 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2330 ))(*(par e 1236 ))))))))(Looped to (0 0 0 1 0 2 0 0 0 1 0 1 0 0 )((assign (par e 2330 )((par e 2367 )))(assign (par e 1236 )((par e 2368 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 0 0 0 1 )()(()((par e 2367 ))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 0 0 0 2 )()(()((par e 2368 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 0 0 1 )((assign (par e 2330 )())(assign (par e 1236 )()))(()((call LogAnd(arg True True ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 0 0 1 0 )()(()(True )))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 0 0 2 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 0 0 2 0 )()(()(False )))))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 1 1 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 2 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 1 0 2 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 1 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 1 1 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 )()(()((call LogAnd(arg True (call IsEqual(arg (*c(par e 2 ))(*(par e 720 )(par e 68 ))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 )((assign (par e 720 )((par s 59 )(par e 2465 )))(assign (par s 59 )(c)))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 2465 )(par e 68 ))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 0 )((assign (par e 2 )((par s 60 )(par e 2508 )))(assign (par e 2465 )((par s 61 )(par e 2509 )))(assign (par s 61 )((par s 60 ))))(let (assign (par e 2 )((par e 2508 )))(assign (par e 2465 )((par e 2509 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 2465 )(par e 68 ))))))))(Children (Node (Looped )(0 0 0 1 0 2 0 0 0 2 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 2465 )(par e 68 ))))))))(Looped to (0 0 0 1 0 2 0 0 0 2 0 )((assign (par e 2 )((par e 2508 )))(assign (par e 2465 )((par e 2509 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 0 1 )()(()((par e 2508 ))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 0 2 )()(()((par e 2509 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 1 )((assign (par e 2 )((par s 60 )(par e 2508 )))(assign (par e 2465 )())(assign (par e 68 )((par s 60 )(par e 2510 ))))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2508 ))(*(par e 2510 ))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 1 0 )((assign (par e 2508 )((par s 72 )(par e 2712 )))(assign (par e 2510 )((par s 72 )(par e 2713 ))))(let (assign (par e 2508 )((par e 2712 )))(assign (par e 2510 )((par e 2713 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 2508 ))(*(par e 2510 ))))))))(Children (Node (Looped )(0 0 0 1 0 2 0 0 0 2 0 1 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2508 ))(*(par e 2510 ))))))))(Looped to (0 0 0 1 0 2 0 0 0 2 0 1 )((assign (par e 2508 )((par e 2712 )))(assign (par e 2510 )((par e 2713 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 1 0 1 )()(()((par e 2712 ))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 1 0 2 )()(()((par e 2713 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 1 1 )((assign (par e 2508 )())(assign (par e 2510 )()))(()((call LogAnd(arg True True ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 1 1 0 )()(()(True )))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 1 2 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 1 2 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 2 )((assign (par e 2 )())(assign (par e 2465 )())(assign (par e 68 )()))(()((call LogAnd(arg True True ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 2 0 )()(()(True )))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 3 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 0 3 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 1 )((assign (par e 720 )())(assign (par e 68 )(c(par e 2466 ))))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 2466 ))))))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 1 0 )((assign (par e 2 )((par s 79 )(par e 2807 )))(assign (par e 2466 )((par s 79 )(par e 2808 ))))(let (assign (par e 2 )((par e 2807 )))(assign (par e 2466 )((par e 2808 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 2466 ))))))))(Children (Node (Looped )(0 0 0 1 0 2 0 0 0 2 1 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 2466 ))))))))(Looped to (0 0 0 1 0 2 0 0 0 2 1 )((assign (par e 2 )((par e 2807 )))(assign (par e 2466 )((par e 2808 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 1 0 1 )()(()((par e 2807 ))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 1 0 2 )()(()((par e 2808 ))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 1 1 )((assign (par e 2 )())(assign (par e 2466 )()))(()((call LogAnd(arg True True ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 1 1 0 )()(()(True )))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 1 2 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 1 2 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 0 0 0 2 2 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 0 0 2 2 0 )()(()(False )))))))))))(Node (Finished)(0 0 0 1 0 2 0 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 0 1 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 2 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 2 1 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 0 3 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 0 3 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 1 )((assign (par e 67 )((par e 719 )a))(assign (par e 68 )(b(par e 721 ))))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(par e 719 )ba(call Repl_a_v(arg (par e 721 ))))))))))(Children (Node (Finished)(0 0 0 1 1 0 )((assign (par e 1 )((par s 85 )(par e 2933 )))(assign (par e 719 )((par s 86 )(par e 2934 )))(assign (par s 86 )((par s 85 ))))(let (assign (par e 1 )((par e 2933 )))(assign (par e 719 )((par e 2934 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(par e 719 )ba(call Repl_a_v(arg (par e 721 ))))))))))(Children (Node (Looped )(0 0 0 1 1 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(par e 719 )ba(call Repl_a_v(arg (par e 721 ))))))))))(Looped to (0 0 0 1 1 )((assign (par e 1 )((par e 2933 )))(assign (par e 719 )((par e 2934 ))))))(Node (Finished)(0 0 0 1 1 0 1 )()(()((par e 2933 ))))(Node (Finished)(0 0 0 1 1 0 2 )()(()((par e 2934 ))))))(Node (Finished)(0 0 0 1 1 1 )((assign (par e 1 )((par s 85 )(par e 2933 )))(assign (par e 719 )())(assign (par s 85 )(b)))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2933 )fabac(par e 2 ))(*a(call Repl_a_v(arg (par e 721 ))))))))))(Children (Node (Finished)(0 0 0 1 1 1 0 )((assign (par e 2933 )((par s 93 )(par e 3087 )))(assign (par s 93 )(a)))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 3087 )fabac(par e 2 ))(*(call Repl_a_v(arg (par e 721 ))))))))))(Children (Node (Finished)(0 0 0 1 1 1 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 3087 )fabac(par e 2 ))(*(par e 721 ))))))))(Children (Node (Finished)(0 0 0 1 1 1 0 0 0 )((assign (par e 3087 )((par s 95 )(par e 3143 )))(assign (par e 721 )((par s 95 )(par e 3144 ))))(let (assign (par e 3087 )((par e 3143 )))(assign (par e 721 )((par e 3144 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 3087 )fabac(par e 2 ))(*(par e 721 ))))))))(Children (Node (Looped )(0 0 0 1 1 1 0 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 3087 )fabac(par e 2 ))(*(par e 721 ))))))))(Looped to (0 0 0 1 1 1 0 0 )((assign (par e 3087 )((par e 3143 )))(assign (par e 721 )((par e 3144 ))))))(Node (Finished)(0 0 0 1 1 1 0 0 0 1 )()(()((par e 3143 ))))(Node (Finished)(0 0 0 1 1 1 0 0 0 2 )()(()((par e 3144 ))))))(Node (Finished)(0 0 0 1 1 1 0 0 1 )((assign (par e 3087 )())(assign (par e 721 )(f(par e 3145 ))))(()((call LogAnd(arg True (call IsEqual(arg (*abac(par e 2 ))(*(par e 3145 ))))))))(Children (Node (Finished)(0 0 0 1 1 1 0 0 1 0 )((assign (par e 3145 )(a(par e 3250 ))))(()((call LogAnd(arg True (call IsEqual(arg (*bac(par e 2 ))(*(par e 3250 ))))))))(Children (Node (Finished)(0 0 0 1 1 1 0 0 1 0 0 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 1 1 0 0 1 0 0 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 1 1 0 0 1 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 1 1 0 0 1 1 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 1 1 0 0 2 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 1 1 0 0 2 0 )()(()(False )))))))))(Node (Finished)(0 0 0 1 1 1 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 1 1 1 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 1 2 )((assign (par e 1 )())(assign (par e 719 )((par s 87 )(par e 2935 )))(assign (par s 87 )(f)))(()((call LogAnd(arg True (call IsEqual(arg (*abac(par e 2 ))(*(par e 2935 )ba(call Repl_a_v(arg (par e 721 ))))))))))(Children (Node (Finished)(0 0 0 1 1 2 0 )((assign (par e 2935 )((par s 100 )(par e 3318 )))(assign (par s 100 )(a)))(()((call LogAnd(arg True (call IsEqual(arg (*bac(par e 2 ))(*(par e 3318 )ba(call Repl_a_v(arg (par e 721 ))))))))))(Children (Node (Finished)(0 0 0 1 1 2 0 0 )((assign (par e 3318 )()))(()((call LogAnd(arg True (call IsEqual(arg (*ac(par e 2 ))(*a(call Repl_a_v(arg (par e 721 ))))))))))(Children (Node (Finished)(0 0 0 1 1 2 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*c(par e 2 ))(*(call Repl_a_v(arg (par e 721 ))))))))))(Children (Node (Finished)(0 0 0 1 1 2 0 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*c(par e 2 ))(*(par e 721 ))))))))(Children (Node (Finished)(0 0 0 1 1 2 0 0 0 0 0 )((assign (par e 721 )(c(par e 3402 ))))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 3402 ))))))))(Children (Node (Finished)(0 0 0 1 1 2 0 0 0 0 0 0 )((assign (par e 2 )((par s 102 )(par e 3419 )))(assign (par e 3402 )((par s 102 )(par e 3420 ))))(let (assign (par e 2 )((par e 3419 )))(assign (par e 3402 )((par e 3420 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 3402 ))))))))(Children (Node (Looped )(0 0 0 1 1 2 0 0 0 0 0 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 2 ))(*(par e 3402 ))))))))(Looped to (0 0 0 1 1 2 0 0 0 0 0 )((assign (par e 2 )((par e 3419 )))(assign (par e 3402 )((par e 3420 ))))))(Node (Finished)(0 0 0 1 1 2 0 0 0 0 0 0 1 )()(()((par e 3419 ))))(Node (Finished)(0 0 0 1 1 2 0 0 0 0 0 0 2 )()(()((par e 3420 ))))))(Node (Finished)(0 0 0 1 1 2 0 0 0 0 0 1 )((assign (par e 2 )())(assign (par e 3402 )()))(()((call LogAnd(arg True True ))))(Children (Node (Finished)(0 0 0 1 1 2 0 0 0 0 0 1 0 )()(()(True )))))(Node (Finished)(0 0 0 1 1 2 0 0 0 0 0 2 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 1 2 0 0 0 0 0 2 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 1 2 0 0 0 0 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 1 2 0 0 0 0 1 0 )()(()(False )))))))))))(Node (Finished)(0 0 0 1 1 2 0 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 1 2 0 1 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 1 2 1 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 1 2 1 0 )()(()(False )))))))(Node (Finished)(0 0 0 1 1 3 )()(()((call LogAnd(arg True False ))))(Children (Node (Finished)(0 0 0 1 1 3 0 )()(()(False )))))))(Node (Driven)(0 0 0 1 2 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(par e 67 )(par e 68 ))))))))(Children (Node (Finished)(0 0 0 1 2 0 )((assign (par e 1 )((par s 108 )(par e 3529 )))(assign (par e 67 )((par s 109 )(par e 3530 )))(assign (par s 109 )((par s 108 ))))(let (assign (par e 1 )((par e 3529 )))(assign (par e 67 )((par e 3530 )))in ((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(par e 67 )(par e 68 ))))))))(Children (Node (Looped )(0 0 0 1 2 0 0 )()(()((call LogAnd(arg True (call IsEqual(arg (*(par e 1 )fabac(par e 2 ))(*(par e 67 )(par e 68 ))))))))(Looped to (0 0 0 1 2 )((assign (par e 1 )((par e 3529 )))(assign (par e 67 )((par e 3530 ))))))(Node (Finished)(0 0 0 1 2 0 1 )()(()((par e 3529 ))))(Node (Finished)(0 0 0 1 2 0 2 )()(()((par e 3530 ))))))(Node (Driven)(0 0 0 1 2 1 )((assign (par e 1 )((par s 108 )(par e 3529 )))(assign (par e 67 )())(assign (par e 68 )((par s 108 )(par e 3531 ))))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 3529 )fabac(par e 2 ))(*(par e 3531 ))))))))(Children (Node (Ready)(0 0 0 1 2 1 0 )((assign (par e 3529 )((par s 118 )(par e 3752 )))(assign (par e 3531 )((par s 118 )(par e 3753 ))))(()((call LogAnd(arg True (call IsEqual(arg (*(par e 3752 )fabac(par e 2 ))(*(par e 3753 )))))))))(Node (Undriven)(0 0 0 1 2 1 1 )((assign (par e 3529 )())(assign (par e 3531 )(f(par e 3754 ))))(()((call LogAnd(arg True (call IsEqual(arg (*abac(par e 2 ))(*(par e 3754 )))))))))(Node (Undriven)(0 0 0 1 2 1 2 )()(()((call LogAnd(arg True False )))))))(Node (Undriven)(0 0 0 1 2 2 )((assign (par e 1 )())(assign (par e 67 )((par s 110 )(par e 3532 )))(assign (par s 110 )(f)))(()((call LogAnd(arg True (call IsEqual(arg (*abac(par e 2 ))(*(par e 3532 )(par e 68 )))))))))(Node (Undriven)(0 0 0 1 2 3 )((assign (par e 1 )())(assign (par e 67 )())(assign (par e 68 )(f(par e 3533 ))))(()((call LogAnd(arg True (call IsEqual(arg (*abac(par e 2 ))(*(par e 3533 )))))))))(Node (Undriven)(0 0 0 1 2 4 )()(()((call LogAnd(arg True False )))))))))))(Node (Undriven)(0 0 1 )()(()()))(Node (Undriven)(0 0 2 )()(()((par e x ))))))(Node (Undriven)(0 1 )()(()((call LogAnd(arg False (call IsEqual(arg (*(par e i ))(*(call Repl_a_v(arg (call Repl_a_v(arg (par e x )))))))))))))))
