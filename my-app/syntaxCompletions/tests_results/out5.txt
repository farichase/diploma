unit:
	declaration:
		Compare_Types
	body:
		sentences:
			sentence:
				leftpart:
					pattern:
						e.2
						s.Type2
						bracketArgs:
							arg:
								e.1
								s.Type1
				rightpart:
					result:
						call:
							Compare_
						result:
							call:
								Ord
							result:
								s.Type2
							bracketArgs:
								arg:
									call:
										Ord
									arg:
										s.Type1
			sentence:
				condExpr:
					pattern:
						e.2
						s.st2
						s.Type
						bracketArgs:
							arg:
								e.1
								s.st1
								s.Type
					condition:
						result:
							s.Type
						patternTerm:
							sentences:
								sentence:
									leftpart:
										pattern:
											s.T
									rightpart:
										result:
											call:
												Compare_
											result:
												call:
													Ord
												result:
													e.2
												bracketArgs:
													arg:
														call:
															Ord
														arg:
															e.1
								sentence:
									leftpart:
										pattern:
											N
									rightpart:
										result:
											call:
												Compare_
											result:
												e.2
												bracketArgs:
													arg:
														e.1
								sentence:
									leftpart:
										pattern:
											W
									rightpart:
										result:
											call:
												Order
											result:
												bracketArgs:
													arg:
														call:
															Explode
														arg:
															e.2
													arg:
														call:
															Explode
														arg:
															e.1
	declaration:
		Compare_
	body:
		sentences:
			sentence:
				leftpart:
					pattern:
						e.1
				rightpart:
					result:
						False
			sentence:
				condExpr:
					pattern:
						s.2
						bracketArgs:
							arg:
								s.1
					condition:
						result:
							call:
								-
							result:
								s.2
								s.1
						pattern:
							e.1
							-
				rightpart:
					result:
						True
			sentence:
				leftpart:
					pattern:
						s.1
						bracketArgs:
							arg:
								s.1
				rightpart:
					result:
						True
	declaration:
		Order
	body:
		sentences:
			sentence:
				leftpart:
					pattern:
						s.2
						bracketArgs:
							arg:
								e.X
				rightpart:
					result:
						False
			sentence:
				leftpart:
					pattern:
						bracketArgs:
							arg:
								e.Y
						s.1
				rightpart:
					result:
						True
			sentence:
				leftpart:
					pattern:
						bracketArgs:
							arg:
								e.Y
								t.2
							arg:
								e.X
								t.1
				rightpart:
					result:
						call:
							Order
						result:
							t.2
							t.1
			sentence:
				leftpart:
					pattern:
						bracketArgs:
							arg:
								e.Y
								t.1
							arg:
								e.X
								t.1
				rightpart:
					result:
						call:
							Order
						result:
							bracketArgs:
								arg:
									e.Y
								arg:
									e.X
			sentence:
				leftpart:
					pattern:
						bracketArgs:
							arg:
								e.Y
								s.2
							arg:
								e.X
								s.1
				rightpart:
					result:
						call:
							Compare_Types
						result:
							call:
								Type
							result:
								s.2
							bracketArgs:
								arg:
									call:
										Type
									arg:
										s.1
			sentence:
				leftpart:
					pattern:
						bracketArgs:
							arg:
								e.Y
								s.1
							arg:
								e.X
								s.1
				rightpart:
					result:
						call:
							Order
						result:
							bracketArgs:
								arg:
									e.Y
								arg:
									e.X
			sentence:
				leftpart:
					pattern:
						s.2
						s.1
				rightpart:
					result:
						call:
							Compare_Types
						result:
							call:
								Type
							result:
								s.2
							bracketArgs:
								arg:
									call:
										Type
									arg:
										s.1
			sentence:
				leftpart:
					pattern:
						bracketArgs:
							arg:
								
							arg:
								e.X
				rightpart:
					result:
						False
			sentence:
				leftpart:
					pattern:
						bracketArgs:
							arg:
								e.Y
							arg:
								
				rightpart:
					result:
						True
	declaration:
		Partit
	body:
		sentences:
			sentence:
				condExpr:
					pattern:
						e.2
						s.X
						bracketArgs:
							arg:
								e.R
						s.M
						bracketArgs:
							arg:
								e.L
					condition:
						result:
							call:
								Order
							result:
								s.M
								s.X
						patternTerm:
							sentences:
								sentence:
									leftpart:
										pattern:
											False
									rightpart:
										result:
											call:
												Partit
											result:
												e.2
												bracketArgs:
													arg:
														s.X
														e.R
												s.M
												bracketArgs:
													arg:
														e.L
								sentence:
									leftpart:
										pattern:
											True
									rightpart:
										result:
											call:
												Partit
											result:
												e.2
												bracketArgs:
													arg:
														e.R
												s.M
												bracketArgs:
													arg:
														s.X
														e.L
			sentence:
				leftpart:
					pattern:
						bracketArgs:
							arg:
								e.R
						s.M
						bracketArgs:
							arg:
								e.L
				rightpart:
					result:
						bracketArgs:
							arg:
								e.R
						s.M
						bracketArgs:
							arg:
								e.L
	declaration:
		Sort
	body:
		sentences:
			sentence:
				condExpr:
					pattern:
						e.2
						t.1
					condition:
						result:
							call:
								Partit
							result:
								e.2
								bracketArgs:
									arg:
										
								t.1
								bracketArgs:
									arg:
										
						pattern:
							bracketArgs:
								arg:
									e.R
							t.1
							bracketArgs:
								arg:
									e.L
				rightpart:
					result:
						call:
							Sort
						result:
							e.R
						t.1
						call:
							Sort
						result:
							e.L
			sentence:
				leftpart:
					
				rightpart:
					
	declaration:
		$ENTRY
		Go
	body:
		sentences:
			sentence:
				leftpart:
					
				rightpart:
					result:
						call:
							Prout
						result:
							call:
								Sort
							result:
								qwertyuiopasdfghjklzxcvbnm
