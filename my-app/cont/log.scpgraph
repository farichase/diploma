(Node (Finished)(0 )()(let (assign (par e 8 )())(assign (par e 9 )((par e Word )))in ((call NextFibWord(arg (*(par e 8 ))(par e 9 )))))(Children (Node (Finished)(0 0 )()(()((call NextFibWord(arg (*(par e 8 ))(par e 9 )))))(Children (Node (Finished)(0 0 0 )((assign (par e 9 )()))(()(True )))(Node (Finished)(0 0 1 )((assign (par e 9 )(A(par e 54 ))))(()((call TestBB(arg (*(par e 8 )BA)(par e 54 )))))(Children (Node (Finished)(0 0 1 0 )((assign (par e 8 )((par e 56 )B)))(()(False )))(Node (Finished)(0 0 1 1 )()(let (assign (par e 69 )((par e 8 )BA))(assign (par e 67 )((par e 54 )))in ((call NextFibWord(arg (*(par e 69 ))(par e 67 )))))(Children (Node (Looped )(0 0 1 1 0 )()(()((call NextFibWord(arg (*(par e 69 ))(par e 67 )))))(Looped to (0 0 )((assign (par e 8 )((par e 69 )))(assign (par e 9 )((par e 67 ))))))(Node (Finished)(0 0 1 1 1 )()(()((par e 8 )BA)))(Node (Finished)(0 0 1 1 2 )()(()((par e 54 ))))))))(Node (Finished)(0 0 2 )((assign (par e 9 )(B(par e 55 ))))(()((call TestBB(arg (*(par e 8 )A)(par e 55 )))))(Children (Node (Finished)(0 0 2 0 )((assign (par e 8 )((par e 80 )BB)))(()(False )))(Node (Finished)(0 0 2 1 )()(let (assign (par e 93 )((par e 8 )A))(assign (par e 91 )((par e 55 )))in ((call NextFibWord(arg (*(par e 93 ))(par e 91 )))))(Children (Node (Looped )(0 0 2 1 0 )()(()((call NextFibWord(arg (*(par e 93 ))(par e 91 )))))(Looped to (0 0 )((assign (par e 8 )((par e 93 )))(assign (par e 9 )((par e 91 ))))))(Node (Finished)(0 0 2 1 1 )()(()((par e 8 )A)))(Node (Finished)(0 0 2 1 2 )()(()((par e 55 ))))))))))(Node (Finished)(0 1 )()(()()))(Node (Finished)(0 2 )()(()((par e Word ))))))
