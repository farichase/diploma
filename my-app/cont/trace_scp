New Clash: No 1 
  Clash: (((call (ReplaceIp 2 )(args (arg (par e p )))))to ())


Splitting...
(AreEqual (T)((weval e 1 ))())
New assignments:
(assign (weval e 1 )((0 Const ))())
New common data:
(assign (weval e 1 )((0 Const ))())
New assignments:
(assign (weval e 1 )((0 Const ))())
Testing negative block in No.1 : 
  Clash: 
  Equations New: (Desired (AreEqual (T)((call (ReplaceIp 2 )(args (arg (par e p )))))()))


***************** END OF NEGATIVE TESTING No.1  *************************

    PRTC No.1  Class C IS COMPLETED:
  Clash: 
  Equations New: (AreEqual (T)((call (ReplaceIp 2 )(args (arg (par e p )))))())
    (Desired )

 to
  Clash: 
  Equations New: (Desired (AreEqual (T)((call (ReplaceIp 2 )(args (arg (par e p )))))()))

---------------------------------------------------------------------------

Multiset of calls to be resolved:
(2 (call (ReplaceIp 2 )(args (arg (par e p )))))
==================================================================================
         SIMPLE NODE (0 ) with status: Driven 
  Restrictions: 

  Configuration: (call (Check 1 )(args (arg (call (ReplaceIp 2 )(args (arg (par e p )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 1 )(args (arg (call (ReplaceIp 2 )(args (arg (par e p )))))))))

  Children of (0 ): 
==================================================================================
         SIMPLE NODE (0 0 ) with status: Ready 
  Restrictions: Push 

  Configuration: (call (Check 1 )(args (arg (call (ReplaceIp 2 )(args (arg (par e p )))))))
  Stack: 
      (assign (var l (1 ))((call (ReplaceIp 2 )(args (arg (par e p ))))))
      (assign (var l (0 ))((call (Check 1 )(args (arg (var l (1 )))))))

  Children of (0 0 ): 
======================== NODE (0 0 ) INFO END====================================
======================== NODE (0 ) INFO END====================================

New stack is ((assign (var l (1 ))((call (ReplaceIp 2 )(args (arg (par e p )))))))((assign (var l (0 ))((call (Check 1 )(args (arg (var l (1 ))))))))
==================================================================================
         SIMPLE NODE (0 ) with status: Ready 
  Restrictions: 

  Configuration: (call (Check 1 )(args (arg (call (ReplaceIp 2 )(args (arg (par e p )))))))
  Stack: 
      (assign (var l (1 ))((call (ReplaceIp 2 )(args (arg (par e p ))))))
      (assign (var l (0 ))((call (Check 1 )(args (arg (var l (1 )))))))

  Children of (0 ): 
======================== NODE (0 ) INFO END====================================

New Clash: No 2 
  Clash: (((par e p ))to ((var e x1 )ip(var e x2 )))


Testing negative block in No.2 : 
  Narrowings: (assign (par e p )((par e 1 )ip(par e 2 )))
  Assignments: (assign (var e x1 )((par e 1 )))(assign (var e x2 )((par e 2 )))


***************** END OF NEGATIVE TESTING No.2  *************************

    PRTC No.2  Class C IS COMPLETED:
  Narrowings: (assign (par e p )((par e 1 )ip(par e 2 )))
  Assignments: (assign (var e x1 )((par e 1 )))(assign (var e x2 )((par e 2 )))

 to
  Narrowings: (assign (par e p )((par e 1 )ip(par e 2 )))
  Assignments: (assign (var e x1 )((par e 1 )))(assign (var e x2 )((par e 2 )))

---------------------------------------------------------------------------

Normalizing negative clash No. 3 
(((par e 1 )i)to ((var e Neg1 )ip))
New Clash: No 4 
  Clash: (((par e p ))to ((var e Other )))
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg3 )ip(var e Neg4 ))))


Testing negative block in No.4 : 
  Narrowings: 
  Assignments: (assign (var e Other )((par e p )))
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg3 )ip(var e Neg4 ))))


Normalizing negative clash No. 5 
(((par e p ))to ((var e Neg3 )ip(var e Neg4 )))
New negative: (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))
***************** END OF NEGATIVE TESTING No.4  *************************

    PRTC No.4  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Other )((par e p )))
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg3 )ip(var e Neg4 ))))

 to
  Narrowings: 
  Assignments: (assign (var e Other )((par e p )))
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 ) with status: ReadyForGenCheck 
  Restrictions: 

  Configuration: (call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p )))))))
  Stack: 
      (assign (var l (1 ))((call ((ReplaceIp (1 2 ))2 )(args (arg (par e p ))))))
      (assign (var l (0 ))((call (Check 1 )(args (arg (var l (1 )))))))

  Children of (0 ): 
==================================================================================
         SIMPLE NODE (0 0 ) with status: Undriven 
  Restrictions: (assign (par e p )((par e 1 )ip(par e 2 )))
  Equations Negative: (OR (D)(((par e 1 ))to ((var e Neg1 )ip(var e Neg2 ))))

  Configuration: (call (Check 1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 ): 
======================== NODE (0 0 ) INFO END====================================
==================================================================================
         SIMPLE NODE (0 1 ) with status: Undriven 
  Restrictions: Always 
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))

  Configuration: (call (Check 1 )(args (arg (par e p ))))
  Stack: 
      (assign (var l (0 ))((call (Check 1 )(args (arg (par e p ))))))

  Children of (0 1 ): 
======================== NODE (0 1 ) INFO END====================================
======================== NODE (0 ) INFO END====================================

New Clash: No 6 
  Clash: (((par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())
  Equations Negative: (OR (D)(((par e 1 ))to ((var e Neg1 )ip(var e Neg2 ))))


Splitting...
(AreEqual (T)((weval e 6 ) ip address (weval e 7 ))())
New common data:
(AreEqual (N)((12 Const )(1 (weval e 6 ))(1 (weval e 7 )))((weval e 6 ) ip address (weval e 7 ))((0 Const ))())
    PRTC No.6  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)((par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )
  Equations Negative: (OR (D)(((par e 1 ))to ((var e Neg1 )ip(var e Neg2 ))))


---------------------------------------------------------------------------

New Clash: No 7 
  Clash: (((par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))
  Equations Negative: (OR (D)(((par e 1 ))to ((var e Neg1 )ip(var e Neg2 ))))


Testing negative block in No.7 : 
  Narrowings: (assign (par e 1 )(<(par e 5 )))(assign (par e 5 )(s(par e 6 )))(assign (par e 6 )(c(par e 7 )))(assign (par e 7 )(r(par e 8 )))(assign (par e 8 )(i(par e 9 )))(assign (par e 9 )(p(par e 10 )))(assign (par e 10 )(t(par e 11 )))
  Assignments: (assign (var e x )((par e 11 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))
  Equations Negative: (OR (D)((<script(par e 11 ))to ((var e Neg1 )ip(var e Neg2 ))))


Normalizing negative clash No. 8 
((<script(par e 11 ))to ((var e Neg1 )ip(var e Neg2 )))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e Neg1 )()))(((<script(par e 11 ))to (ip(var e Neg2 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e Neg1 )(<(var e 1 ))))(((script(par e 11 ))to ((var e 1 )ip(var e Neg2 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 1 )())(assign (var e Neg1 )(<)))(((script(par e 11 ))to (ip(var e Neg2 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 1 )(s(var e 2 )))(assign (var e Neg1 )(<s(var e 2 ))))(((cript(par e 11 ))to ((var e 2 )ip(var e Neg2 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 2 )())(assign (var e 1 )(s))(assign (var e Neg1 )(<s)))(((cript(par e 11 ))to (ip(var e Neg2 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 2 )(c(var e 3 )))(assign (var e 1 )(sc(var e 3 )))(assign (var e Neg1 )(<sc(var e 3 ))))(((ript(par e 11 ))to ((var e 3 )ip(var e Neg2 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 3 )())(assign (var e 2 )(c))(assign (var e 1 )(sc))(assign (var e Neg1 )(<sc)))(((ript(par e 11 ))to (ip(var e Neg2 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 3 )(r(var e 4 )))(assign (var e 2 )(cr(var e 4 )))(assign (var e 1 )(scr(var e 4 )))(assign (var e Neg1 )(<scr(var e 4 ))))(((ipt(par e 11 ))to ((var e 4 )ip(var e Neg2 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 4 )())(assign (var e 3 )(r))(assign (var e 2 )(cr))(assign (var e 1 )(scr))(assign (var e Neg1 )(<scr)))(((ipt(par e 11 ))to (ip(var e Neg2 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 4 )(i(var e 5 )))(assign (var e 3 )(ri(var e 5 )))(assign (var e 2 )(cri(var e 5 )))(assign (var e 1 )(scri(var e 5 )))(assign (var e Neg1 )(<scri(var e 5 ))))(((pt(par e 11 ))to ((var e 5 )ip(var e Neg2 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 5 )())(assign (var e 4 )(i))(assign (var e 3 )(ri))(assign (var e 2 )(cri))(assign (var e 1 )(scri))(assign (var e Neg1 )(<scri)))(((pt(par e 11 ))to (ip(var e Neg2 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 5 )(p(var e 6 )))(assign (var e 4 )(ip(var e 6 )))(assign (var e 3 )(rip(var e 6 )))(assign (var e 2 )(crip(var e 6 )))(assign (var e 1 )(scrip(var e 6 )))(assign (var e Neg1 )(<scrip(var e 6 ))))(((t(par e 11 ))to ((var e 6 )ip(var e Neg2 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 6 )())(assign (var e 5 )(p))(assign (var e 4 )(ip))(assign (var e 3 )(rip))(assign (var e 2 )(crip))(assign (var e 1 )(scrip))(assign (var e Neg1 )(<scrip)))(((t(par e 11 ))to (ip(var e Neg2 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 6 )(t(var e 7 )))(assign (var e 5 )(pt(var e 7 )))(assign (var e 4 )(ipt(var e 7 )))(assign (var e 3 )(ript(var e 7 )))(assign (var e 2 )(cript(var e 7 )))(assign (var e 1 )(script(var e 7 )))(assign (var e Neg1 )(<script(var e 7 ))))((((par e 11 ))to ((var e 7 )ip(var e Neg2 )))(Delayed ))(T))
***************** END OF NEGATIVE TESTING PRTC No.7   *************************

    PRTC No.7  FAILED in negative block:
  Narrowings: (assign (par e 1 )(<(par e 5 )))(assign (par e 5 )(s(par e 6 )))(assign (par e 6 )(c(par e 7 )))(assign (par e 7 )(r(par e 8 )))(assign (par e 8 )(i(par e 9 )))(assign (par e 9 )(p(par e 10 )))(assign (par e 10 )(t(par e 11 )))
  Assignments: (assign (var e x )((par e 11 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))
  Equations Negative: (OR (D)((<script(par e 11 ))to ((var e Neg1 )ip(var e Neg2 ))))


---------------------------------------------------------------------------

New Clash: No 9 
  Clash: (((par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))
  Equations Negative: (OR (D)(((par e 1 ))to ((var e Neg1 )ip(var e Neg2 ))))


Testing negative block in No.9 : 
  Narrowings: (assign (par e 1 )((par t 1 )(par e 14 )))
  Assignments: (assign (var e Z )((par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )((par t 1 )))
  Equations Negative: (OR (D)(((par t 1 )(par e 14 ))to ((var e Neg1 )ip(var e Neg2 ))))


Normalizing negative clash No. 10 
(((par t 1 )(par e 14 ))to ((var e Neg1 )ip(var e Neg2 )))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e Neg1 )()))((((par t 1 )(par e 14 ))to (ip(var e Neg2 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e Neg1 )((par t 1 )(var e 8 ))))((((par e 14 ))to ((var e 8 )ip(var e Neg2 )))(Delayed ))(T))
New negative: (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
New negative: (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
***************** END OF NEGATIVE TESTING No.9  *************************

    PRTC No.9  Class C IS COMPLETED:
  Narrowings: (assign (par e 1 )((par t 1 )(par e 14 )))
  Assignments: (assign (var e Z )((par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )((par t 1 )))
  Equations Negative: (OR (D)(((par t 1 )(par e 14 ))to ((var e Neg1 )ip(var e Neg2 ))))

 to
  Narrowings: (assign (par e 1 )((par t 1 )(par e 14 )))
  Assignments: (assign (var e Z )((par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )((par t 1 )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))

---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (D)(()to ((var e Neg1 )ip(var e Neg2 ))))
    (OR (T)(((par e 1 ))to ((var t Neg1 )(var e Neg12 ))))
Screened inequalities:

    (OR (D)(()to ((var e Neg1 )ip(var e Neg2 ))))
    (OR (T)(((par e 1 ))to ((var t Neg1 )(var e Neg12 ))))
Testing negative block in No.10 : 
  Narrowings: (assign (par e 1 )())
  Assignments: (assign (var e Z )(ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))
  Equations Negative: (OR (D)(()to ((var e Neg1 )ip(var e Neg2 ))))
    (OR (T)(((par e 1 ))to ((var t Neg1 )(var e Neg12 ))))


Normalizing negative clash No. 11 
(()to ((var e Neg1 )ip(var e Neg2 )))
Normalizing negative clash No. 12 
(((par e 1 ))to ((var t Neg1 )(var e Neg12 )))
***************** END OF NEGATIVE TESTING No.10  *************************

    PRTC No.10  Class C IS COMPLETED:
  Narrowings: (assign (par e 1 )())
  Assignments: (assign (var e Z )(ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))
  Equations Negative: (OR (D)(()to ((var e Neg1 )ip(var e Neg2 ))))
    (OR (T)(((par e 1 ))to ((var t Neg1 )(var e Neg12 ))))

 to
  Narrowings: (assign (par e 1 )())
  Assignments: (assign (var e Z )(ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 ) with status: ReadyForGenCheck 
  Restrictions: (assign (par e p )((par e 1 )ip(par e 2 )))
  Equations Negative: (OR (D)(((par e 1 ))to ((var e Neg1 )ip(var e Neg2 ))))

  Configuration: (call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 0 ) with status: Undriven 
  Restrictions: (assign (par e 1 )((par t 1 )(par e 14 )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))

  Configuration: (call (Check 4 )(args (arg (par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 4 )(args (arg (par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 0 ): 
======================== NODE (0 0 0 ) INFO END====================================
==================================================================================
         SIMPLE NODE (0 0 1 ) with status: Undriven 
  Restrictions: (assign (par e 1 )())

  Configuration: (call (Check 5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 ): 
======================== NODE (0 0 1 ) INFO END====================================
======================== NODE (0 0 ) INFO END====================================

  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))1 ))
New Clash: No 13 
  Clash: (((par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))


Splitting...
(AreEqual (T)((weval e 21 ) ip address (weval e 22 ))())
New common data:
(AreEqual (N)((12 Const )(1 (weval e 21 ))(1 (weval e 22 )))((weval e 21 ) ip address (weval e 22 ))((0 Const ))())
    PRTC No.13  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)((par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))


---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
New Clash: No 14 
  Clash: (((par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))


Testing negative block in No.14 : 
  Narrowings: (assign (par e 14 )(<(par e 19 )))(assign (par e 19 )(s(par e 20 )))(assign (par e 20 )(c(par e 21 )))(assign (par e 21 )(r(par e 22 )))(assign (par e 22 )(i(par e 23 )))(assign (par e 23 )(p(par e 24 )))(assign (par e 24 )(t(par e 25 )))
  Assignments: (assign (var e x )((par e 25 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))
  Equations Negative: (OR (T)(((par t 1 ))to (i))((<script(par e 25 ))to (p(var e Neg9 ))))
    (OR (D)((<script(par e 25 ))to ((var e Neg10 )ip(var e Neg11 ))))


Normalizing negative clash No. 15 
(((par t 1 ))to (i))((<script(par e 25 ))to (p(var e Neg9 )))
Normalizing negative clash No. 16 
((<script(par e 25 ))to ((var e Neg10 )ip(var e Neg11 )))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e Neg10 )()))(((<script(par e 25 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e Neg10 )(<(var e 1 ))))(((script(par e 25 ))to ((var e 1 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 1 )())(assign (var e Neg10 )(<)))(((script(par e 25 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 1 )(s(var e 2 )))(assign (var e Neg10 )(<s(var e 2 ))))(((cript(par e 25 ))to ((var e 2 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 2 )())(assign (var e 1 )(s))(assign (var e Neg10 )(<s)))(((cript(par e 25 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 2 )(c(var e 3 )))(assign (var e 1 )(sc(var e 3 )))(assign (var e Neg10 )(<sc(var e 3 ))))(((ript(par e 25 ))to ((var e 3 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 3 )())(assign (var e 2 )(c))(assign (var e 1 )(sc))(assign (var e Neg10 )(<sc)))(((ript(par e 25 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 3 )(r(var e 4 )))(assign (var e 2 )(cr(var e 4 )))(assign (var e 1 )(scr(var e 4 )))(assign (var e Neg10 )(<scr(var e 4 ))))(((ipt(par e 25 ))to ((var e 4 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 4 )())(assign (var e 3 )(r))(assign (var e 2 )(cr))(assign (var e 1 )(scr))(assign (var e Neg10 )(<scr)))(((ipt(par e 25 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 4 )(i(var e 5 )))(assign (var e 3 )(ri(var e 5 )))(assign (var e 2 )(cri(var e 5 )))(assign (var e 1 )(scri(var e 5 )))(assign (var e Neg10 )(<scri(var e 5 ))))(((pt(par e 25 ))to ((var e 5 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 5 )())(assign (var e 4 )(i))(assign (var e 3 )(ri))(assign (var e 2 )(cri))(assign (var e 1 )(scri))(assign (var e Neg10 )(<scri)))(((pt(par e 25 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 5 )(p(var e 6 )))(assign (var e 4 )(ip(var e 6 )))(assign (var e 3 )(rip(var e 6 )))(assign (var e 2 )(crip(var e 6 )))(assign (var e 1 )(scrip(var e 6 )))(assign (var e Neg10 )(<scrip(var e 6 ))))(((t(par e 25 ))to ((var e 6 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 6 )())(assign (var e 5 )(p))(assign (var e 4 )(ip))(assign (var e 3 )(rip))(assign (var e 2 )(crip))(assign (var e 1 )(scrip))(assign (var e Neg10 )(<scrip)))(((t(par e 25 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 6 )(t(var e 7 )))(assign (var e 5 )(pt(var e 7 )))(assign (var e 4 )(ipt(var e 7 )))(assign (var e 3 )(ript(var e 7 )))(assign (var e 2 )(cript(var e 7 )))(assign (var e 1 )(script(var e 7 )))(assign (var e Neg10 )(<script(var e 7 ))))((((par e 25 ))to ((var e 7 )ip(var e Neg11 )))(Delayed ))(T))
***************** END OF NEGATIVE TESTING PRTC No.14   *************************

    PRTC No.14  FAILED in negative block:
  Narrowings: (assign (par e 14 )(<(par e 19 )))(assign (par e 19 )(s(par e 20 )))(assign (par e 20 )(c(par e 21 )))(assign (par e 21 )(r(par e 22 )))(assign (par e 22 )(i(par e 23 )))(assign (par e 23 )(p(par e 24 )))(assign (par e 24 )(t(par e 25 )))
  Assignments: (assign (var e x )((par e 25 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))
  Equations Negative: (OR (T)(((par t 1 ))to (i))((<script(par e 25 ))to (p(var e Neg9 ))))
    (OR (D)((<script(par e 25 ))to ((var e Neg10 )ip(var e Neg11 ))))


---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
New Clash: No 17 
  Clash: (((par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))


Testing negative block in No.17 : 
  Narrowings: (assign (par e 14 )((par t 2 )(par e 28 )))
  Assignments: (assign (var e Z )((par e 28 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )((par t 2 )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par t 2 )(par e 28 ))to (p(var e Neg9 ))))
    (OR (D)(((par t 2 )(par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))


Normalizing negative clash No. 18 
(((par t 1 ))to (i))(((par t 2 )(par e 28 ))to (p(var e Neg9 )))
New negative: (OR (T)(((par t 1 ))to (i))(((par t 2 ))to (p)))
Normalizing negative clash No. 19 
(((par t 2 )(par e 28 ))to ((var e Neg10 )ip(var e Neg11 )))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e Neg10 )()))((((par t 2 )(par e 28 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e Neg10 )((par t 2 )(var e 8 ))))((((par e 28 ))to ((var e 8 )ip(var e Neg11 )))(Delayed ))(T))
New negative: (OR (T)(((par t 2 ))to (i))(((par e 28 ))to (p(var e Neg9 ))))
New negative: (OR (D)(((par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))
ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(((par t 2 ))to (p)))
    (OR (T)(((par t 2 ))to (i))(((par e 28 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par t 2 ))to (p)))
    (OR (T)(((par t 2 ))to (i))(((par e 28 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))
ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(((par t 2 ))to (p)))
    (OR (T)(((par t 2 ))to (i))(((par e 28 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par t 2 ))to (p)))
    (OR (T)(((par t 2 ))to (i))(((par e 28 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))
ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(((par t 2 ))to (p)))
    (OR (T)(((par t 2 ))to (i))(((par e 28 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par t 2 ))to (p)))
    (OR (T)(((par t 2 ))to (i))(((par e 28 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))
***************** END OF NEGATIVE TESTING No.17  *************************

    PRTC No.17  Class C IS COMPLETED:
  Narrowings: (assign (par e 14 )((par t 2 )(par e 28 )))
  Assignments: (assign (var e Z )((par e 28 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )((par t 2 )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par t 2 )(par e 28 ))to (p(var e Neg9 ))))
    (OR (D)(((par t 2 )(par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))

 to
  Narrowings: (assign (par e 14 )((par t 2 )(par e 28 )))
  Assignments: (assign (var e Z )((par e 28 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )((par t 2 )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par t 2 ))to (p)))
    (OR (T)(((par t 2 ))to (i))(((par e 28 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))

---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(()to (p(var e Neg9 ))))
    (OR (D)(()to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 14 ))to ((var t Neg1 )(var e Neg12 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(()to (p(var e Neg9 ))))
    (OR (D)(()to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 14 ))to ((var t Neg1 )(var e Neg12 ))))
Testing negative block in No.19 : 
  Narrowings: (assign (par e 14 )())
  Assignments: (assign (var e Z )(ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(()to (p(var e Neg9 ))))
    (OR (D)(()to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 14 ))to ((var t Neg1 )(var e Neg12 ))))


ToScreen inequalities:

    (OR (D)(()to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 14 ))to ((var t Neg1 )(var e Neg12 ))))
Screened inequalities:

    (OR (D)(()to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 14 ))to ((var t Neg1 )(var e Neg12 ))))
Normalizing negative clash No. 20 
(((par t 1 ))to (i))(()to (p(var e Neg9 )))
Normalizing negative clash No. 21 
(()to ((var e Neg10 )ip(var e Neg11 )))
Normalizing negative clash No. 22 
(((par e 14 ))to ((var t Neg1 )(var e Neg12 )))
***************** END OF NEGATIVE TESTING No.19  *************************

    PRTC No.19  Class C IS COMPLETED:
  Narrowings: (assign (par e 14 )())
  Assignments: (assign (var e Z )(ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(()to (p(var e Neg9 ))))
    (OR (D)(()to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 14 ))to ((var t Neg1 )(var e Neg12 ))))

 to
  Narrowings: (assign (par e 14 )())
  Assignments: (assign (var e Z )(ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 0 ) with status: ReadyForGenCheck 
  Restrictions: (assign (par e 1 )((par t 1 )(par e 14 )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))

  Configuration: (call ((Check (3 ))4 )(args (arg (par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))4 )(args (arg (par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 0 0 ) with status: Undriven 
  Restrictions: (assign (par e 14 )((par t 2 )(par e 28 )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par t 2 ))to (p)))
    (OR (T)(((par t 2 ))to (i))(((par e 28 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 28 ))to ((var e Neg10 )ip(var e Neg11 ))))

  Configuration: (call (Check 6 )(args (arg (par e 28 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 6 )(args (arg (par e 28 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 0 0 ): 
======================== NODE (0 0 0 0 ) INFO END====================================
==================================================================================
         SIMPLE NODE (0 0 0 1 ) with status: Undriven 
  Restrictions: (assign (par e 14 )())

  Configuration: (call (Check 7 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 7 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 0 1 ): 
======================== NODE (0 0 0 1 ) INFO END====================================
======================== NODE (0 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))4 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))4 )(args (arg (par e 14 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  EMBEDDING IS SUCCESSFUL.
Depth is 0 
ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
Driving GENERALIZING negative clash No. 23 
Testing negative block in No.23 : 
  Narrowings: (assign (par e 14 )((par e 35 )ip(par e 36 )))
  Assignments: (assign (var e Neg1 )((par e 35 )))(assign (var e Neg2 )((par e 36 )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par e 35 )ip(par e 36 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 35 )ip(par e 36 ))to ((var e Neg10 )ip(var e Neg11 ))))


Normalizing negative clash No. 24 
(((par t 1 ))to (i))(((par e 35 )ip(par e 36 ))to (p(var e Neg9 )))
New negative: (OR (T)(((par t 1 ))to (i))(((par e 35 ))to (p(var e Neg16 ))))
Normalizing negative clash No. 25 
(((par e 35 )ip(par e 36 ))to ((var e Neg10 )ip(var e Neg11 )))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))((assign (par e 35 )((par e 38 )ip(par e 39 ))))((assign (var e Neg10 )((par e 38 ))))((((par e 39 )ip(par e 36 ))to ((var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))((assign (par e 35 )((par e 38 )i)))((assign (var e Neg10 )((par e 38 ))))(((ip(par e 36 ))to (p(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))((assign (par e 35 )((par e 38 ))))((assign (var e Neg10 )((par e 38 ))))(((ip(par e 36 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e Neg10 )((par e 35 )(var e 17 ))))(((ip(par e 36 ))to ((var e 17 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 17 )())(assign (var e Neg10 )((par e 35 ))))(((ip(par e 36 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 17 )(i(var e 22 )))(assign (var e Neg10 )((par e 35 )i(var e 22 ))))(((p(par e 36 ))to ((var e 22 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 22 )())(assign (var e 17 )(i))(assign (var e Neg10 )((par e 35 )i)))(((p(par e 36 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 22 )(p(var e 23 )))(assign (var e 17 )(ip(var e 23 )))(assign (var e Neg10 )((par e 35 )ip(var e 23 ))))((((par e 36 ))to ((var e 23 )ip(var e Neg11 )))(Delayed ))(T))
***************** END OF NEGATIVE TESTING PRTC No.23   *************************

    PRTC No.23  FAILED in negative block:
  Narrowings: (assign (par e 14 )((par e 35 )ip(par e 36 )))
  Assignments: (assign (var e Neg1 )((par e 35 )))(assign (var e Neg2 )((par e 36 )))
  Equations Negative: (OR (T)(((par t 1 ))to (i))(((par e 35 )ip(par e 36 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 35 )ip(par e 36 ))to ((var e Neg10 )ip(var e Neg11 ))))


---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (D)(((par e 14 ))to ((var e Neg1 )ip(var e Neg2 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg1 )ip(var e Neg2 ))))
Normalizing negative clash No. 26 
(((par e 14 ))to ((var e Neg1 )ip(var e Neg2 )))
New negative: (OR (D)(((par e 14 ))to ((var e Neg24 )ip(var e Neg25 ))))
Screened inequalities:

    (OR (T)(((par t 1 ))to (i))(((par e 14 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 14 ))to ((var e Neg1 )ip(var e Neg2 ))))

  Equations are preserved:

  Inequalities are preserved:
    (OR (D)(((par e 1 ))to ((var e Neg1 )ip(var e Neg2 ))))
==============================================================================
           LET NODE (0 0 0 )
  Let information: (Let ((0 0 0 1 )(assign (par e 1 )((par e 14 ))))In ((call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))
  Restrictions: (assign (par e 1 )((par t 1 )(par e 14 )))

  Configuration: 
  Stack: 
======================== NODE (0 0 0 ) INFO END====================================

==================================================================================
         SIMPLE NODE (0 ) with status: Driven 
  Restrictions: 

  Configuration: (call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p )))))))
  Stack: 
      (assign (var l (1 ))((call ((ReplaceIp (1 2 ))2 )(args (arg (par e p ))))))
      (assign (var l (0 ))((call (Check 1 )(args (arg (var l (1 )))))))

  Children of (0 ): 
==================================================================================
         SIMPLE NODE (0 0 ) with status: Driven 
  Restrictions: (assign (par e p )((par e 1 )ip(par e 2 )))
  Equations Negative: (OR (D)(((par e 1 ))to ((var e Neg1 )ip(var e Neg2 ))))

  Configuration: (call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 ): 
==============================================================================
           LET NODE (0 0 0 )
  Let information: (Let ((0 0 0 1 )(assign (par e 1 )((par e 14 ))))In ((call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))
  Restrictions: (assign (par e 1 )((par t 1 )(par e 14 )))

  Configuration: 
  Stack: 
======================== NODE (0 0 0 ) INFO END====================================
======================== NODE (0 0 ) INFO END====================================
==================================================================================
         SIMPLE NODE (0 1 ) with status: Undriven 
  Restrictions: Always 
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))

  Configuration: (call (Check 1 )(args (arg (par e p ))))
  Stack: 
      (assign (var l (0 ))((call (Check 1 )(args (arg (par e p ))))))

  Children of (0 1 ): 
======================== NODE (0 1 ) INFO END====================================
======================== NODE (0 ) INFO END====================================

New Clash: No 27 
  Clash: ((ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)(ip address (weval e 46 ))())
New common data:
(AreEqual (N)((11 Const )(1 (weval e 46 )))(ip address (weval e 46 ))((0 Const ))())
    PRTC No.27  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)(ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 28 
  Clash: ((ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 29 
  Clash: ((ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.29 : 
  Narrowings: 
  Assignments: (assign (var e Z )(p address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(i))


***************** END OF NEGATIVE TESTING No.29  *************************

    PRTC No.29  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )(p address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(i))

 to
  Narrowings: 
  Assignments: (assign (var e Z )(p address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(i))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 ) with status: ReadyForGenCheck 
  Restrictions: (assign (par e 1 )())

  Configuration: (call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 ): 
======================== NODE (0 0 1 0 ) INFO END====================================
======================== NODE (0 0 1 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))5 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))5 ))
New Clash: No 30 
  Clash: ((p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)(p address (weval e 47 ))())
New common data:
(AreEqual (N)((10 Const )(1 (weval e 47 )))(p address (weval e 47 ))((0 Const ))())
    PRTC No.30  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)(p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 31 
  Clash: ((p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 32 
  Clash: ((p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.32 : 
  Narrowings: 
  Assignments: (assign (var e Z )( address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(p))


***************** END OF NEGATIVE TESTING No.32  *************************

    PRTC No.32  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )( address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(p))

 to
  Narrowings: 
  Assignments: (assign (var e Z )( address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(p))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 ): 
======================== NODE (0 0 1 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((Check (3 ))8 ))
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))8 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))8 ))
New Clash: No 33 
  Clash: (( address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)( address (weval e 48 ))())
New common data:
(AreEqual (N)((9 Const )(1 (weval e 48 )))( address (weval e 48 ))((0 Const ))())
    PRTC No.33  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)( address (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 34 
  Clash: (( address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 35 
  Clash: (( address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.35 : 
  Narrowings: 
  Assignments: (assign (var e Z )(address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))


***************** END OF NEGATIVE TESTING No.35  *************************

    PRTC No.35  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )(address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))

 to
  Narrowings: 
  Assignments: (assign (var e Z )(address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))8 ))
 and 
(((Check (3 ))9 ))
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((Check (3 ))9 ))
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))9 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))9 ))
New Clash: No 36 
  Clash: ((address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)(address (weval e 49 ))())
New common data:
(AreEqual (N)((8 Const )(1 (weval e 49 )))(address (weval e 49 ))((0 Const ))())
    PRTC No.36  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)(address (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 37 
  Clash: ((address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 38 
  Clash: ((address (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.38 : 
  Narrowings: 
  Assignments: (assign (var e Z )(ddress (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(a))


***************** END OF NEGATIVE TESTING No.38  *************************

    PRTC No.38  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )(ddress (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(a))

 to
  Narrowings: 
  Assignments: (assign (var e Z )(ddress (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(a))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))9 ))
 and 
(((Check (3 ))10 ))
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))8 ))
 and 
(((Check (3 ))10 ))
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((Check (3 ))10 ))
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))10 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))10 ))
New Clash: No 39 
  Clash: ((ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)(ddress (weval e 50 ))())
New common data:
(AreEqual (N)((7 Const )(1 (weval e 50 )))(ddress (weval e 50 ))((0 Const ))())
    PRTC No.39  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)(ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 40 
  Clash: ((ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 41 
  Clash: ((ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.41 : 
  Narrowings: 
  Assignments: (assign (var e Z )(dress (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(d))


***************** END OF NEGATIVE TESTING No.41  *************************

    PRTC No.41  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )(dress (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(d))

 to
  Narrowings: 
  Assignments: (assign (var e Z )(dress (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(d))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 0 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))10 ))
 and 
(((Check (3 ))11 ))
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))9 ))
 and 
(((Check (3 ))11 ))
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))8 ))
 and 
(((Check (3 ))11 ))
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((Check (3 ))11 ))
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))11 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))11 ))
New Clash: No 42 
  Clash: ((dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)(dress (weval e 51 ))())
New common data:
(AreEqual (N)((6 Const )(1 (weval e 51 )))(dress (weval e 51 ))((0 Const ))())
    PRTC No.42  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)(dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 43 
  Clash: ((dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 44 
  Clash: ((dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.44 : 
  Narrowings: 
  Assignments: (assign (var e Z )(ress (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(d))


***************** END OF NEGATIVE TESTING No.44  *************************

    PRTC No.44  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )(ress (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(d))

 to
  Narrowings: 
  Assignments: (assign (var e Z )(ress (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(d))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 0 0 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))11 ))
 and 
(((Check (3 ))12 ))
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))10 ))
 and 
(((Check (3 ))12 ))
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))9 ))
 and 
(((Check (3 ))12 ))
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))8 ))
 and 
(((Check (3 ))12 ))
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((Check (3 ))12 ))
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))12 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))12 ))
New Clash: No 45 
  Clash: ((ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)(ress (weval e 52 ))())
New common data:
(AreEqual (N)((5 Const )(1 (weval e 52 )))(ress (weval e 52 ))((0 Const ))())
    PRTC No.45  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)(ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 46 
  Clash: ((ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 47 
  Clash: ((ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.47 : 
  Narrowings: 
  Assignments: (assign (var e Z )(ess (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(r))


***************** END OF NEGATIVE TESTING No.47  *************************

    PRTC No.47  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )(ess (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(r))

 to
  Narrowings: 
  Assignments: (assign (var e Z )(ess (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(r))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 0 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 0 0 0 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))12 ))
 and 
(((Check (3 ))13 ))
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))11 ))
 and 
(((Check (3 ))13 ))
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))10 ))
 and 
(((Check (3 ))13 ))
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))9 ))
 and 
(((Check (3 ))13 ))
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))8 ))
 and 
(((Check (3 ))13 ))
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((Check (3 ))13 ))
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))13 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))13 ))
New Clash: No 48 
  Clash: ((ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)(ess (weval e 53 ))())
New common data:
(AreEqual (N)((4 Const )(1 (weval e 53 )))(ess (weval e 53 ))((0 Const ))())
    PRTC No.48  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)(ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 49 
  Clash: ((ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 50 
  Clash: ((ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.50 : 
  Narrowings: 
  Assignments: (assign (var e Z )(ss (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(e))


***************** END OF NEGATIVE TESTING No.50  *************************

    PRTC No.50  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )(ss (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(e))

 to
  Narrowings: 
  Assignments: (assign (var e Z )(ss (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(e))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 0 0 0 0 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))13 ))
 and 
(((Check (3 ))14 ))
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))12 ))
 and 
(((Check (3 ))14 ))
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))11 ))
 and 
(((Check (3 ))14 ))
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))10 ))
 and 
(((Check (3 ))14 ))
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))9 ))
 and 
(((Check (3 ))14 ))
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))8 ))
 and 
(((Check (3 ))14 ))
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((Check (3 ))14 ))
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))14 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))14 ))
New Clash: No 51 
  Clash: ((ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)(ss (weval e 54 ))())
New common data:
(AreEqual (N)((3 Const )(1 (weval e 54 )))(ss (weval e 54 ))((0 Const ))())
    PRTC No.51  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)(ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 52 
  Clash: ((ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 53 
  Clash: ((ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.53 : 
  Narrowings: 
  Assignments: (assign (var e Z )(s (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(s))


***************** END OF NEGATIVE TESTING No.53  *************************

    PRTC No.53  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )(s (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(s))

 to
  Narrowings: 
  Assignments: (assign (var e Z )(s (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(s))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))14 ))
 and 
(((Check (3 ))15 ))
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))13 ))
 and 
(((Check (3 ))15 ))
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))12 ))
 and 
(((Check (3 ))15 ))
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))11 ))
 and 
(((Check (3 ))15 ))
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))10 ))
 and 
(((Check (3 ))15 ))
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))9 ))
 and 
(((Check (3 ))15 ))
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))8 ))
 and 
(((Check (3 ))15 ))
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((Check (3 ))15 ))
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))15 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))15 ))
New Clash: No 54 
  Clash: ((s (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)(s (weval e 55 ))())
New common data:
(AreEqual (N)((2 Const )(1 (weval e 55 )))(s (weval e 55 ))((0 Const ))())
    PRTC No.54  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)(s (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 55 
  Clash: ((s (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 56 
  Clash: ((s (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.56 : 
  Narrowings: 
  Assignments: (assign (var e Z )( (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(s))


***************** END OF NEGATIVE TESTING No.56  *************************

    PRTC No.56  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )( (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(s))

 to
  Narrowings: 
  Assignments: (assign (var e Z )( (call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )(s))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))15 ))
 and 
(((Check (3 ))16 ))
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))14 ))
 and 
(((Check (3 ))16 ))
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))13 ))
 and 
(((Check (3 ))16 ))
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))12 ))
 and 
(((Check (3 ))16 ))
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))11 ))
 and 
(((Check (3 ))16 ))
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))10 ))
 and 
(((Check (3 ))16 ))
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))9 ))
 and 
(((Check (3 ))16 ))
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))8 ))
 and 
(((Check (3 ))16 ))
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((Check (3 ))16 ))
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))16 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))16 ))
New Clash: No 57 
  Clash: (( (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)( (weval e 56 ))())
New common data:
(AreEqual (N)((1 Const )(1 (weval e 56 )))( (weval e 56 ))((0 Const ))())
    PRTC No.57  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)( (call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )


---------------------------------------------------------------------------

New Clash: No 58 
  Clash: (( (call (ReplaceIp 3 )(args (arg (par e 2 )))))to (<script(var e x )))


New Clash: No 59 
  Clash: (( (call (ReplaceIp 3 )(args (arg (par e 2 )))))to ((var t y )(var e Z )))


Testing negative block in No.59 : 
  Narrowings: 
  Assignments: (assign (var e Z )((call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))


***************** END OF NEGATIVE TESTING No.59  *************************

    PRTC No.59  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Z )((call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))

 to
  Narrowings: 
  Assignments: (assign (var e Z )((call (ReplaceIp 3 )(args (arg (par e 2 ))))))(assign (var t y )( ))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ) with status: Undriven 
  Restrictions: Always 

  Configuration: (call (Check 18 )(args (arg (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 18 )(args (arg (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))16 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))16 )(args (arg s (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))15 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))15 )(args (arg ss (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))14 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))14 )(args (arg ess (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))13 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))13 )(args (arg ress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))12 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))12 )(args (arg dress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))11 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))11 )(args (arg ddress (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))10 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))10 )(args (arg address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))9 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))9 )(args (arg  address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))8 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))8 )(args (arg p address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))5 )(args (arg ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((Check (3 ))17 ))
(call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
 and 
(call ((Check (3 ))17 )(args (arg  (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (3 ))17 ))
New Clash: No 60 
  Clash: (((call (ReplaceIp 3 )(args (arg (par e 2 )))))to ())


Splitting...
(AreEqual (T)((weval e 57 ))())
New assignments:
(assign (weval e 57 )((0 Const ))())
New common data:
(assign (weval e 57 )((0 Const ))())
New assignments:
(assign (weval e 57 )((0 Const ))())
Testing negative block in No.60 : 
  Clash: 
  Equations New: (Desired (AreEqual (T)((call (ReplaceIp 3 )(args (arg (par e 2 )))))()))


***************** END OF NEGATIVE TESTING No.60  *************************

    PRTC No.60  Class C IS COMPLETED:
  Clash: 
  Equations New: (AreEqual (T)((call (ReplaceIp 3 )(args (arg (par e 2 )))))())
    (Desired )

 to
  Clash: 
  Equations New: (Desired (AreEqual (T)((call (ReplaceIp 3 )(args (arg (par e 2 )))))()))

---------------------------------------------------------------------------

Multiset of calls to be resolved:
(2 (call (ReplaceIp 3 )(args (arg (par e 2 )))))
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ) with status: Driven 
  Restrictions: Always 

  Configuration: (call (Check 18 )(args (arg (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 18 )(args (arg (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ) with status: Ready 
  Restrictions: Push 

  Configuration: (call (Check 18 )(args (arg (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (2 ))((call (ReplaceIp 3 )(args (arg (par e 2 ))))))
      (assign (var l (0 ))((call (Check 18 )(args (arg (var l (2 )))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ) INFO END====================================
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ) INFO END====================================

New stack is ((assign (var l (2 ))((call (ReplaceIp 3 )(args (arg (par e 2 )))))))((assign (var l (0 ))((call (Check 18 )(args (arg (var l (2 ))))))))
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ) with status: Ready 
  Restrictions: Always 

  Configuration: (call (Check 18 )(args (arg (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (2 ))((call (ReplaceIp 3 )(args (arg (par e 2 ))))))
      (assign (var l (0 ))((call (Check 18 )(args (arg (var l (2 )))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ) INFO END====================================

New Clash: No 61 
  Clash: (((par e 2 ))to ((var e x1 )ip(var e x2 )))


Testing negative block in No.61 : 
  Narrowings: (assign (par e 2 )((par e 44 )ip(par e 45 )))
  Assignments: (assign (var e x1 )((par e 44 )))(assign (var e x2 )((par e 45 )))


***************** END OF NEGATIVE TESTING No.61  *************************

    PRTC No.61  Class C IS COMPLETED:
  Narrowings: (assign (par e 2 )((par e 44 )ip(par e 45 )))
  Assignments: (assign (var e x1 )((par e 44 )))(assign (var e x2 )((par e 45 )))

 to
  Narrowings: (assign (par e 2 )((par e 44 )ip(par e 45 )))
  Assignments: (assign (var e x1 )((par e 44 )))(assign (var e x2 )((par e 45 )))

---------------------------------------------------------------------------

Normalizing negative clash No. 62 
(((par e 44 )i)to ((var e Neg1 )ip))
New Clash: No 63 
  Clash: (((par e 2 ))to ((var e Other )))
  Equations Negative: (OR (D)(((par e 2 ))to ((var e Neg3 )ip(var e Neg4 ))))


Testing negative block in No.63 : 
  Narrowings: 
  Assignments: (assign (var e Other )((par e 2 )))
  Equations Negative: (OR (D)(((par e 2 ))to ((var e Neg3 )ip(var e Neg4 ))))


Normalizing negative clash No. 64 
(((par e 2 ))to ((var e Neg3 )ip(var e Neg4 )))
New negative: (OR (D)(((par e 2 ))to ((var e Neg5 )ip(var e Neg6 ))))
***************** END OF NEGATIVE TESTING No.63  *************************

    PRTC No.63  Class C IS COMPLETED:
  Narrowings: 
  Assignments: (assign (var e Other )((par e 2 )))
  Equations Negative: (OR (D)(((par e 2 ))to ((var e Neg3 )ip(var e Neg4 ))))

 to
  Narrowings: 
  Assignments: (assign (var e Other )((par e 2 )))
  Equations Negative: (OR (D)(((par e 2 ))to ((var e Neg5 )ip(var e Neg6 ))))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ) with status: ReadyForGenCheck 
  Restrictions: Always 

  Configuration: (call (Check 18 )(args (arg (call ((ReplaceIp (1 2 ))3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (2 ))((call ((ReplaceIp (1 2 ))3 )(args (arg (par e 2 ))))))
      (assign (var l (0 ))((call (Check 18 )(args (arg (var l (2 )))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ): 
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ) with status: Undriven 
  Restrictions: (assign (par e 2 )((par e 44 )ip(par e 45 )))
  Equations Negative: (OR (D)(((par e 44 ))to ((var e Neg1 )ip(var e Neg2 ))))

  Configuration: (call (Check 18 )(args (arg (par e 44 ) ip address (call (ReplaceIp 19 )(args (arg (par e 45 )))))))
  Stack: 
      (assign (var l (0 ))((call (Check 18 )(args (arg (par e 44 ) ip address (call (ReplaceIp 19 )(args (arg (par e 45 )))))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ): 
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ) INFO END====================================
==================================================================================
         SIMPLE NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 ) with status: Undriven 
  Restrictions: Always 
  Equations Negative: (OR (D)(((par e 2 ))to ((var e Neg5 )ip(var e Neg6 ))))

  Configuration: (call (Check 18 )(args (arg (par e 2 ))))
  Stack: 
      (assign (var l (0 ))((call (Check 18 )(args (arg (par e 2 ))))))

  Children of (0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 ): 
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 ) INFO END====================================
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ) INFO END====================================

  Trying to embed: 
(((Check (3 ))17 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))16 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))15 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))14 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))13 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))12 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))11 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))10 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))9 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))8 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))5 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((Check (3 ))1 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((ReplaceIp (1 2 ))3 ))((Check 18 ))
(call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p )))))))
 and 
(call (Check 18 )(args (arg (call ((ReplaceIp (1 2 ))3 )(args (arg (par e 2 )))))))
  EMBEDDING IS SUCCESSFUL.
Depth is 1 

  Equations are preserved:

  Inequalities are preserved:
==============================================================================
           LET NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 )
  Let information: (Let ((0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 )(assign (par e p )((par e 2 ))))In ((call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p )))))))))
  Restrictions: Always 

  Configuration: 
  Stack: 
======================== NODE (0 0 1 0 0 0 0 0 0 0 0 0 0 0 ) INFO END====================================

==================================================================================
         SIMPLE NODE (0 ) with status: Driven 
  Restrictions: 

  Configuration: (call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p )))))))
  Stack: 
      (assign (var l (1 ))((call ((ReplaceIp (1 2 ))2 )(args (arg (par e p ))))))
      (assign (var l (0 ))((call (Check 1 )(args (arg (var l (1 )))))))

  Children of (0 ): 
==================================================================================
         SIMPLE NODE (0 0 ) with status: Driven 
  Restrictions: (assign (par e p )((par e 1 )ip(par e 2 )))
  Equations Negative: (OR (D)(((par e 1 ))to ((var e Neg1 )ip(var e Neg2 ))))

  Configuration: (call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))
  Stack: 
      (assign (var l (0 ))((call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))

  Children of (0 0 ): 
Node (0 0 0 ) is a root of a subtree.
======================== NODE (0 0 ) INFO END====================================
==================================================================================
         SIMPLE NODE (0 1 ) with status: Undriven 
  Restrictions: Always 
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))

  Configuration: (call (Check 1 )(args (arg (par e p ))))
  Stack: 
      (assign (var l (0 ))((call (Check 1 )(args (arg (par e p ))))))

  Children of (0 1 ): 
======================== NODE (0 1 ) INFO END====================================
======================== NODE (0 ) INFO END====================================

New Clash: No 65 
  Clash: (((par e p ))to ())
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))


Testing negative block in No.65 : 
  Narrowings: (assign (par e p )())
  Assignments: 
  Equations Negative: (OR (D)(()to ((var e Neg5 )ip(var e Neg6 ))))


Normalizing negative clash No. 66 
(()to ((var e Neg5 )ip(var e Neg6 )))
***************** END OF NEGATIVE TESTING No.65  *************************

    PRTC No.65  Class C IS COMPLETED:
  Narrowings: (assign (par e p )())
  Assignments: 
  Equations Negative: (OR (D)(()to ((var e Neg5 )ip(var e Neg6 ))))

 to
  Narrowings: (assign (par e p )())
  Assignments: 

---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))
    (OR (T)(((par e p ))to ()))
Screened inequalities:

    (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))
    (OR (T)(((par e p ))to ()))
New Clash: No 67 
  Clash: (((par e p ))to (<script(var e x )))
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))
    (OR (T)(((par e p ))to ()))


Testing negative block in No.67 : 
  Narrowings: (assign (par e p )(<script(par e 50 )))
  Assignments: (assign (var e x )((par e 50 )))
  Equations Negative: (OR (D)((<script(par e 50 ))to ((var e Neg5 )ip(var e Neg6 ))))
    (OR (T)((<script(par e 50 ))to ()))


Normalizing negative clash No. 68 
((<script(par e 50 ))to ((var e Neg5 )ip(var e Neg6 )))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e Neg5 )()))(((<script(par e 50 ))to (ip(var e Neg6 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e Neg5 )(<(var e 1 ))))(((script(par e 50 ))to ((var e 1 )ip(var e Neg6 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 1 )())(assign (var e Neg5 )(<)))(((script(par e 50 ))to (ip(var e Neg6 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 1 )(s(var e 2 )))(assign (var e Neg5 )(<s(var e 2 ))))(((cript(par e 50 ))to ((var e 2 )ip(var e Neg6 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 2 )())(assign (var e 1 )(s))(assign (var e Neg5 )(<s)))(((cript(par e 50 ))to (ip(var e Neg6 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 2 )(c(var e 3 )))(assign (var e 1 )(sc(var e 3 )))(assign (var e Neg5 )(<sc(var e 3 ))))(((ript(par e 50 ))to ((var e 3 )ip(var e Neg6 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 3 )())(assign (var e 2 )(c))(assign (var e 1 )(sc))(assign (var e Neg5 )(<sc)))(((ript(par e 50 ))to (ip(var e Neg6 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 3 )(r(var e 4 )))(assign (var e 2 )(cr(var e 4 )))(assign (var e 1 )(scr(var e 4 )))(assign (var e Neg5 )(<scr(var e 4 ))))(((ipt(par e 50 ))to ((var e 4 )ip(var e Neg6 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 4 )())(assign (var e 3 )(r))(assign (var e 2 )(cr))(assign (var e 1 )(scr))(assign (var e Neg5 )(<scr)))(((ipt(par e 50 ))to (ip(var e Neg6 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 4 )(i(var e 5 )))(assign (var e 3 )(ri(var e 5 )))(assign (var e 2 )(cri(var e 5 )))(assign (var e 1 )(scri(var e 5 )))(assign (var e Neg5 )(<scri(var e 5 ))))(((pt(par e 50 ))to ((var e 5 )ip(var e Neg6 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 5 )())(assign (var e 4 )(i))(assign (var e 3 )(ri))(assign (var e 2 )(cri))(assign (var e 1 )(scri))(assign (var e Neg5 )(<scri)))(((pt(par e 50 ))to (ip(var e Neg6 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 5 )(p(var e 6 )))(assign (var e 4 )(ip(var e 6 )))(assign (var e 3 )(rip(var e 6 )))(assign (var e 2 )(crip(var e 6 )))(assign (var e 1 )(scrip(var e 6 )))(assign (var e Neg5 )(<scrip(var e 6 ))))(((t(par e 50 ))to ((var e 6 )ip(var e Neg6 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 6 )())(assign (var e 5 )(p))(assign (var e 4 )(ip))(assign (var e 3 )(rip))(assign (var e 2 )(crip))(assign (var e 1 )(scrip))(assign (var e Neg5 )(<scrip)))(((t(par e 50 ))to (ip(var e Neg6 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 50 ))to ())))(Numeric )(Generic ))()((assign (var e 6 )(t(var e 7 )))(assign (var e 5 )(pt(var e 7 )))(assign (var e 4 )(ipt(var e 7 )))(assign (var e 3 )(ript(var e 7 )))(assign (var e 2 )(cript(var e 7 )))(assign (var e 1 )(script(var e 7 )))(assign (var e Neg5 )(<script(var e 7 ))))((((par e 50 ))to ((var e 7 )ip(var e Neg6 )))(Delayed ))(T))
***************** END OF NEGATIVE TESTING PRTC No.67   *************************

    PRTC No.67  FAILED in negative block:
  Narrowings: (assign (par e p )(<script(par e 50 )))
  Assignments: (assign (var e x )((par e 50 )))
  Equations Negative: (OR (D)((<script(par e 50 ))to ((var e Neg5 )ip(var e Neg6 ))))
    (OR (T)((<script(par e 50 ))to ()))


---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))
    (OR (T)(((par e p ))to ()))
Screened inequalities:

    (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))
    (OR (T)(((par e p ))to ()))
New Clash: No 69 
  Clash: (((par e p ))to ((var t y )(var e Z )))
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))
    (OR (T)(((par e p ))to ()))


Testing negative block in No.69 : 
  Narrowings: (assign (par e p )((par t 3 )(par e 53 )))
  Assignments: (assign (var t y )((par t 3 )))(assign (var e Z )((par e 53 )))
  Equations Negative: (OR (D)(((par t 3 )(par e 53 ))to ((var e Neg5 )ip(var e Neg6 ))))
    (OR (T)(((par t 3 )(par e 53 ))to ()))


Normalizing negative clash No. 70 
(((par t 3 )(par e 53 ))to ((var e Neg5 )ip(var e Neg6 )))
(((New (Desired ))(Grammar )(Negative (OR (T)(((par t 3 )(par e 53 ))to ())))(Numeric )(Generic ))()((assign (var e Neg5 )()))((((par t 3 )(par e 53 ))to (ip(var e Neg6 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)(((par t 3 )(par e 53 ))to ())))(Numeric )(Generic ))()((assign (var e Neg5 )((par t 3 )(var e 8 ))))((((par e 53 ))to ((var e 8 )ip(var e Neg6 )))(Delayed ))(T))
New negative: (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
New negative: (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
Normalizing negative clash No. 71 
(((par t 3 )(par e 53 ))to ())
Splitting...
(AreEqual (T)((weval t 4 )(weval e 69 ))())
New common data:
(AreEqual (N)((1 Const )(1 (weval e 69 )))((weval t 4 )(weval e 69 ))((0 Const ))())
    PRTC No.71  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)((par t 3 )(par e 53 ))())
    (Desired )


---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
ToScreen inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
ToScreen inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
***************** END OF NEGATIVE TESTING No.69  *************************

    PRTC No.69  Class C IS COMPLETED:
  Narrowings: (assign (par e p )((par t 3 )(par e 53 )))
  Assignments: (assign (var t y )((par t 3 )))(assign (var e Z )((par e 53 )))
  Equations Negative: (OR (D)(((par t 3 )(par e 53 ))to ((var e Neg5 )ip(var e Neg6 ))))
    (OR (T)(((par t 3 )(par e 53 ))to ()))

 to
  Narrowings: (assign (par e p )((par t 3 )(par e 53 )))
  Assignments: (assign (var t y )((par t 3 )))(assign (var e Z )((par e 53 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 1 ) with status: ReadyForGenCheck 
  Restrictions: Always 
  Equations Negative: (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))

  Configuration: (call ((Check (1 3 ))1 )(args (arg (par e p ))))
  Stack: 
      (assign (var l (0 ))((call ((Check (1 3 ))1 )(args (arg (par e p ))))))

  Children of (0 1 ): 
==================================================================================
         SIMPLE NODE (0 1 0 ) with status: Undriven 
  Restrictions: (assign (par e p )())

  Configuration: T
  Stack: 
      (assign (var l (0 ))(T))

  Children of (0 1 0 ): 
======================== NODE (0 1 0 ) INFO END====================================
==================================================================================
         SIMPLE NODE (0 1 1 ) with status: Undriven 
  Restrictions: (assign (par e p )((par t 3 )(par e 53 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))

  Configuration: (call (Check 20 )(args (arg (par e 53 ))))
  Stack: 
      (assign (var l (0 ))((call (Check 20 )(args (arg (par e 53 ))))))

  Children of (0 1 1 ): 
======================== NODE (0 1 1 ) INFO END====================================
======================== NODE (0 1 ) INFO END====================================

  Trying to embed: 
(((ReplaceIp (1 2 ))2 ))((Check 1 ))
 and 
(((Check (1 3 ))1 ))
==================================================================================
         SIMPLE NODE (0 ) with status: Driven 
  Restrictions: 

  Configuration: (call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p )))))))
  Stack: 
      (assign (var l (1 ))((call ((ReplaceIp (1 2 ))2 )(args (arg (par e p ))))))
      (assign (var l (0 ))((call (Check 1 )(args (arg (var l (1 )))))))

  Children of (0 ): 
Node (0 0 ) is a root of a subtree.
======================== NODE (0 ) INFO END====================================

New Clash: No 72 
  Clash: (((par e 53 ))to ())
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))


Testing negative block in No.72 : 
  Narrowings: (assign (par e 53 )())
  Assignments: 
  Equations Negative: (OR (T)(((par t 3 ))to (i))(()to (p(var e Neg9 ))))
    (OR (D)(()to ((var e Neg10 )ip(var e Neg11 ))))


Normalizing negative clash No. 73 
(((par t 3 ))to (i))(()to (p(var e Neg9 )))
Normalizing negative clash No. 74 
(()to ((var e Neg10 )ip(var e Neg11 )))
***************** END OF NEGATIVE TESTING No.72  *************************

    PRTC No.72  Class C IS COMPLETED:
  Narrowings: (assign (par e 53 )())
  Assignments: 
  Equations Negative: (OR (T)(((par t 3 ))to (i))(()to (p(var e Neg9 ))))
    (OR (D)(()to ((var e Neg10 )ip(var e Neg11 ))))

 to
  Narrowings: (assign (par e 53 )())
  Assignments: 

---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 53 ))to ()))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 53 ))to ()))
New Clash: No 75 
  Clash: (((par e 53 ))to (<script(var e x )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 53 ))to ()))


Testing negative block in No.75 : 
  Narrowings: (assign (par e 53 )(<script(par e 58 )))
  Assignments: (assign (var e x )((par e 58 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))((<script(par e 58 ))to (p(var e Neg9 ))))
    (OR (D)((<script(par e 58 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)((<script(par e 58 ))to ()))


ToScreen inequalities:

    (OR (D)((<script(par e 58 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)((<script(par e 58 ))to ()))
Screened inequalities:

    (OR (D)((<script(par e 58 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)((<script(par e 58 ))to ()))
Normalizing negative clash No. 76 
(((par t 3 ))to (i))((<script(par e 58 ))to (p(var e Neg9 )))
Normalizing negative clash No. 77 
((<script(par e 58 ))to ((var e Neg10 )ip(var e Neg11 )))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e Neg10 )()))(((<script(par e 58 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e Neg10 )(<(var e 1 ))))(((script(par e 58 ))to ((var e 1 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 1 )())(assign (var e Neg10 )(<)))(((script(par e 58 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 1 )(s(var e 2 )))(assign (var e Neg10 )(<s(var e 2 ))))(((cript(par e 58 ))to ((var e 2 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 2 )())(assign (var e 1 )(s))(assign (var e Neg10 )(<s)))(((cript(par e 58 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 2 )(c(var e 3 )))(assign (var e 1 )(sc(var e 3 )))(assign (var e Neg10 )(<sc(var e 3 ))))(((ript(par e 58 ))to ((var e 3 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 3 )())(assign (var e 2 )(c))(assign (var e 1 )(sc))(assign (var e Neg10 )(<sc)))(((ript(par e 58 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 3 )(r(var e 4 )))(assign (var e 2 )(cr(var e 4 )))(assign (var e 1 )(scr(var e 4 )))(assign (var e Neg10 )(<scr(var e 4 ))))(((ipt(par e 58 ))to ((var e 4 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 4 )())(assign (var e 3 )(r))(assign (var e 2 )(cr))(assign (var e 1 )(scr))(assign (var e Neg10 )(<scr)))(((ipt(par e 58 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 4 )(i(var e 5 )))(assign (var e 3 )(ri(var e 5 )))(assign (var e 2 )(cri(var e 5 )))(assign (var e 1 )(scri(var e 5 )))(assign (var e Neg10 )(<scri(var e 5 ))))(((pt(par e 58 ))to ((var e 5 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 5 )())(assign (var e 4 )(i))(assign (var e 3 )(ri))(assign (var e 2 )(cri))(assign (var e 1 )(scri))(assign (var e Neg10 )(<scri)))(((pt(par e 58 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 5 )(p(var e 6 )))(assign (var e 4 )(ip(var e 6 )))(assign (var e 3 )(rip(var e 6 )))(assign (var e 2 )(crip(var e 6 )))(assign (var e 1 )(scrip(var e 6 )))(assign (var e Neg10 )(<scrip(var e 6 ))))(((t(par e 58 ))to ((var e 6 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 6 )())(assign (var e 5 )(p))(assign (var e 4 )(ip))(assign (var e 3 )(rip))(assign (var e 2 )(crip))(assign (var e 1 )(scrip))(assign (var e Neg10 )(<scrip)))(((t(par e 58 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)((<script(par e 58 ))to ())))(Numeric )(Generic ))()((assign (var e 6 )(t(var e 7 )))(assign (var e 5 )(pt(var e 7 )))(assign (var e 4 )(ipt(var e 7 )))(assign (var e 3 )(ript(var e 7 )))(assign (var e 2 )(cript(var e 7 )))(assign (var e 1 )(script(var e 7 )))(assign (var e Neg10 )(<script(var e 7 ))))((((par e 58 ))to ((var e 7 )ip(var e Neg11 )))(Delayed ))(T))
***************** END OF NEGATIVE TESTING PRTC No.75   *************************

    PRTC No.75  FAILED in negative block:
  Narrowings: (assign (par e 53 )(<script(par e 58 )))
  Assignments: (assign (var e x )((par e 58 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))((<script(par e 58 ))to (p(var e Neg9 ))))
    (OR (D)((<script(par e 58 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)((<script(par e 58 ))to ()))


---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 53 ))to ()))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 53 ))to ()))
New Clash: No 78 
  Clash: (((par e 53 ))to ((var t y )(var e Z )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par e 53 ))to ()))


Testing negative block in No.78 : 
  Narrowings: (assign (par e 53 )((par t 4 )(par e 61 )))
  Assignments: (assign (var t y )((par t 4 )))(assign (var e Z )((par e 61 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par t 4 )(par e 61 ))to (p(var e Neg9 ))))
    (OR (D)(((par t 4 )(par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par t 4 )(par e 61 ))to ()))


ToScreen inequalities:

    (OR (D)(((par t 4 )(par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par t 4 )(par e 61 ))to ()))
Screened inequalities:

    (OR (D)(((par t 4 )(par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par t 4 )(par e 61 ))to ()))
Normalizing negative clash No. 79 
(((par t 3 ))to (i))(((par t 4 )(par e 61 ))to (p(var e Neg9 )))
New negative: (OR (T)(((par t 3 ))to (i))(((par t 4 ))to (p)))
Normalizing negative clash No. 80 
(((par t 4 )(par e 61 ))to ((var e Neg10 )ip(var e Neg11 )))
(((New (Desired ))(Grammar )(Negative (OR (T)(((par t 4 )(par e 61 ))to ())))(Numeric )(Generic ))()((assign (var e Neg10 )()))((((par t 4 )(par e 61 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative (OR (T)(((par t 4 )(par e 61 ))to ())))(Numeric )(Generic ))()((assign (var e Neg10 )((par t 4 )(var e 8 ))))((((par e 61 ))to ((var e 8 )ip(var e Neg11 )))(Delayed ))(T))
New negative: (OR (T)(((par t 4 ))to (i))(((par e 61 ))to (p(var e Neg9 ))))
New negative: (OR (D)(((par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
Normalizing negative clash No. 81 
(((par t 4 )(par e 61 ))to ())
Splitting...
(AreEqual (T)((weval t 6 )(weval e 77 ))())
New common data:
(AreEqual (N)((1 Const )(1 (weval e 77 )))((weval t 6 )(weval e 77 ))((0 Const ))())
    PRTC No.81  FAILED in equation block:
  Clash: 
  Equations New: (AreEqual (T)((par t 4 )(par e 61 ))())
    (Desired )


---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (T)(((par t 3 ))to (i))(((par t 4 ))to (p)))
    (OR (T)(((par t 4 ))to (i))(((par e 61 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par t 4 ))to (p)))
    (OR (T)(((par t 4 ))to (i))(((par e 61 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
ToScreen inequalities:

    (OR (T)(((par t 3 ))to (i))(((par t 4 ))to (p)))
    (OR (T)(((par t 4 ))to (i))(((par e 61 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par t 4 ))to (p)))
    (OR (T)(((par t 4 ))to (i))(((par e 61 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
ToScreen inequalities:

    (OR (T)(((par t 3 ))to (i))(((par t 4 ))to (p)))
    (OR (T)(((par t 4 ))to (i))(((par e 61 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par t 4 ))to (p)))
    (OR (T)(((par t 4 ))to (i))(((par e 61 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
***************** END OF NEGATIVE TESTING No.78  *************************

    PRTC No.78  Class C IS COMPLETED:
  Narrowings: (assign (par e 53 )((par t 4 )(par e 61 )))
  Assignments: (assign (var t y )((par t 4 )))(assign (var e Z )((par e 61 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par t 4 )(par e 61 ))to (p(var e Neg9 ))))
    (OR (D)(((par t 4 )(par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (T)(((par t 4 )(par e 61 ))to ()))

 to
  Narrowings: (assign (par e 53 )((par t 4 )(par e 61 )))
  Assignments: (assign (var t y )((par t 4 )))(assign (var e Z )((par e 61 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par t 4 ))to (p)))
    (OR (T)(((par t 4 ))to (i))(((par e 61 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))

---------------------------------------------------------------------------

==================================================================================
         SIMPLE NODE (0 1 1 ) with status: ReadyForGenCheck 
  Restrictions: (assign (par e p )((par t 3 )(par e 53 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))

  Configuration: (call ((Check (1 3 ))20 )(args (arg (par e 53 ))))
  Stack: 
      (assign (var l (0 ))((call ((Check (1 3 ))20 )(args (arg (par e 53 ))))))

  Children of (0 1 1 ): 
==================================================================================
         SIMPLE NODE (0 1 1 0 ) with status: Undriven 
  Restrictions: (assign (par e 53 )())

  Configuration: T
  Stack: 
      (assign (var l (0 ))(T))

  Children of (0 1 1 0 ): 
======================== NODE (0 1 1 0 ) INFO END====================================
==================================================================================
         SIMPLE NODE (0 1 1 1 ) with status: Undriven 
  Restrictions: (assign (par e 53 )((par t 4 )(par e 61 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par t 4 ))to (p)))
    (OR (T)(((par t 4 ))to (i))(((par e 61 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 61 ))to ((var e Neg10 )ip(var e Neg11 ))))

  Configuration: (call (Check 21 )(args (arg (par e 61 ))))
  Stack: 
      (assign (var l (0 ))((call (Check 21 )(args (arg (par e 61 ))))))

  Children of (0 1 1 1 ): 
======================== NODE (0 1 1 1 ) INFO END====================================
======================== NODE (0 1 1 ) INFO END====================================

  Trying to embed: 
(((Check (1 3 ))1 ))
 and 
(((Check (1 3 ))20 ))
(call ((Check (1 3 ))1 )(args (arg (par e p ))))
 and 
(call ((Check (1 3 ))20 )(args (arg (par e 53 ))))
  EMBEDDING IS SUCCESSFUL.
Depth is 0 
ToScreen inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
Driving GENERALIZING negative clash No. 82 
Testing negative block in No.82 : 
  Narrowings: (assign (par e 53 )((par e 68 )ip(par e 69 )))
  Assignments: (assign (var e Neg5 )((par e 68 )))(assign (var e Neg6 )((par e 69 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par e 68 )ip(par e 69 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 68 )ip(par e 69 ))to ((var e Neg10 )ip(var e Neg11 ))))


Normalizing negative clash No. 83 
(((par t 3 ))to (i))(((par e 68 )ip(par e 69 ))to (p(var e Neg9 )))
New negative: (OR (T)(((par t 3 ))to (i))(((par e 68 ))to (p(var e Neg13 ))))
Normalizing negative clash No. 84 
(((par e 68 )ip(par e 69 ))to ((var e Neg10 )ip(var e Neg11 )))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))((assign (par e 68 )((par e 71 )ip(par e 72 ))))((assign (var e Neg10 )((par e 71 ))))((((par e 72 )ip(par e 69 ))to ((var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))((assign (par e 68 )((par e 71 )i)))((assign (var e Neg10 )((par e 71 ))))(((ip(par e 69 ))to (p(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))((assign (par e 68 )((par e 71 ))))((assign (var e Neg10 )((par e 71 ))))(((ip(par e 69 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e Neg10 )((par e 68 )(var e 14 ))))(((ip(par e 69 ))to ((var e 14 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 14 )())(assign (var e Neg10 )((par e 68 ))))(((ip(par e 69 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 14 )(i(var e 19 )))(assign (var e Neg10 )((par e 68 )i(var e 19 ))))(((p(par e 69 ))to ((var e 19 )ip(var e Neg11 )))(Delayed ))(T))
(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 19 )())(assign (var e 14 )(i))(assign (var e Neg10 )((par e 68 )i)))(((p(par e 69 ))to (ip(var e Neg11 )))(Delayed ))(T))(((New (Desired ))(Grammar )(Negative )(Numeric )(Generic ))()((assign (var e 19 )(p(var e 20 )))(assign (var e 14 )(ip(var e 20 )))(assign (var e Neg10 )((par e 68 )ip(var e 20 ))))((((par e 69 ))to ((var e 20 )ip(var e Neg11 )))(Delayed ))(T))
***************** END OF NEGATIVE TESTING PRTC No.82   *************************

    PRTC No.82  FAILED in negative block:
  Narrowings: (assign (par e 53 )((par e 68 )ip(par e 69 )))
  Assignments: (assign (var e Neg5 )((par e 68 )))(assign (var e Neg6 )((par e 69 )))
  Equations Negative: (OR (T)(((par t 3 ))to (i))(((par e 68 )ip(par e 69 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 68 )ip(par e 69 ))to ((var e Neg10 )ip(var e Neg11 ))))


---------------------------------------------------------------------------

ToScreen inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg10 )ip(var e Neg11 ))))
    (OR (D)(((par e 53 ))to ((var e Neg5 )ip(var e Neg6 ))))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg5 )ip(var e Neg6 ))))
Normalizing negative clash No. 85 
(((par e 53 ))to ((var e Neg5 )ip(var e Neg6 )))
New negative: (OR (D)(((par e 53 ))to ((var e Neg21 )ip(var e Neg22 ))))
Screened inequalities:

    (OR (T)(((par t 3 ))to (i))(((par e 53 ))to (p(var e Neg9 ))))
    (OR (D)(((par e 53 ))to ((var e Neg5 )ip(var e Neg6 ))))

  Equations are preserved:

  Inequalities are preserved:
    (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 ))))
==============================================================================
           LET NODE (0 1 1 )
  Let information: (Let ((0 1 1 1 )(assign (par e p )((par e 53 ))))In ((call ((Check (1 3 ))1 )(args (arg (par e p ))))))
  Restrictions: (assign (par e p )((par t 3 )(par e 53 )))

  Configuration: 
  Stack: 
======================== NODE (0 1 1 ) INFO END====================================

==================================================================================
         SIMPLE NODE (0 ) with status: Driven 
  Restrictions: 

  Configuration: (call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p )))))))
  Stack: 
      (assign (var l (1 ))((call ((ReplaceIp (1 2 ))2 )(args (arg (par e p ))))))
      (assign (var l (0 ))((call (Check 1 )(args (arg (var l (1 )))))))

  Children of (0 ): 
Node (0 0 ) is a root of a subtree.
======================== NODE (0 ) INFO END====================================

Renamed :(0 0 1 0 ) to (0 0 1 )
Renamed :(0 0 1 0 ) to (0 0 1 )
Renamed :(0 0 1 0 ) to (0 0 1 )
Renamed :(0 0 1 0 ) to (0 0 1 )
Renamed :(0 0 1 0 ) to (0 0 1 )
Renamed :(0 0 1 0 ) to (0 0 1 )
Renamed :(0 0 1 0 ) to (0 0 1 )
Renamed :(0 0 1 0 ) to (0 0 1 )
Renamed :(0 0 1 0 ) to (0 0 1 )
Renamed :(0 0 1 0 ) to (0 0 1 )
Renamed :(0 0 1 0 ) to (0 0 1 )

Roots of the functions:
((0 0 )((Check (3 ))0 )(2 )((par e 1 )(par e 2 )))((0 )(Check 0 )(1 )((par e p )))((0 1 )((Check (1 3 ))0 )(1 )((par e p )))

(Node Finished (0 )(()((New )(Grammar )(Negative )(Numeric )(Generic ))()((call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p ))))))))(((assign (var l (1 ))((call ((ReplaceIp (1 2 ))2 )(args (arg (par e p )))))))((assign (var l (0 ))((call (Check 1 )(args (arg (var l (1 ))))))))))(Children (Node Finished (0 0 )(((assign (par e p )((par e 1 )ip(par e 2 ))))((New )(Grammar )(Negative (OR (D)(((par e 1 ))to ((var e Neg1 )ip(var e Neg2 )))))(Numeric )(Generic ))()((call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))))(((assign (var l (0 ))((call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))))))))(Children (Node Finished (0 0 0 )(((assign (par e 1 )((par t 1 )(par e 14 ))))((New )(Grammar )(Negative )(Numeric )(Generic ))((Let ((0 0 0 1 )(assign (par e 1 )((par e 14 ))))In ((call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))))))()())(Children (Node (Looped To (0 0 )With (assign (par e 1 )((par e 14 ))))(0 0 0 0 )(()((New )(Grammar )(Negative )(Numeric )(Generic ))()((call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 ))))))))(((assign (var l (0 ))((call ((Check (3 ))1 )(args (arg (par e 1 ) ip address (call (ReplaceIp 3 )(args (arg (par e 2 )))))))))))))(Node Finished (0 0 0 1 )(()((New )(Grammar )(Negative )(Numeric )(Generic ))()((par e 14 ))(((assign (var l (0 ))((par e 14 )))))))))(Node Finished (0 0 1 )(((assign (par e 1 )()))((New )(Grammar )(Negative )(Numeric )(Generic ))((Let ((0 0 1 1 )(assign (par e p )((par e 2 ))))In ((call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p ))))))))))()())(Children (Node (Looped To (0 )With (assign (par e p )((par e 2 ))))(0 0 1 0 )(()((New )(Grammar )(Negative )(Numeric )(Generic ))()((call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p ))))))))(((assign (var l (0 ))((call (Check 1 )(args (arg (call ((ReplaceIp (1 2 ))2 )(args (arg (par e p )))))))))))))(Node Finished (0 0 1 1 )(()((New )(Grammar )(Negative )(Numeric )(Generic ))()((par e 2 ))(((assign (var l (0 ))((par e 2 )))))))))))(Node Finished (0 1 )((Always )((New )(Grammar )(Negative (OR (D)(((par e p ))to ((var e Neg5 )ip(var e Neg6 )))))(Numeric )(Generic ))()((call ((Check (1 3 ))1 )(args (arg (par e p )))))(((assign (var l (0 ))((call ((Check (1 3 ))1 )(args (arg (par e p )))))))))(Children (Node Finished (0 1 0 )(((assign (par e p )()))((New )(Grammar )(Negative )(Numeric )(Generic ))()(T)(((assign (var l (0 ))(T))))))(Node Finished (0 1 1 )(((assign (par e p )((par t 3 )(par e 53 ))))((New )(Grammar )(Negative )(Numeric )(Generic ))((Let ((0 1 1 1 )(assign (par e p )((par e 53 ))))In ((call ((Check (1 3 ))1 )(args (arg (par e p )))))))()())(Children (Node (Looped To (0 1 )With (assign (par e p )((par e 53 ))))(0 1 1 0 )(()((New )(Grammar )(Negative )(Numeric )(Generic ))()((call ((Check (1 3 ))1 )(args (arg (par e p )))))(((assign (var l (0 ))((call ((Check (1 3 ))1 )(args (arg (par e p ))))))))))(Node Finished (0 1 1 1 )(()((New )(Grammar )(Negative )(Numeric )(Generic ))()((par e 53 ))(((assign (var l (0 ))((par e 53 )))))))))))))
Successors are raised:
(Node (Function (Check 0 )Merged With ((par e p ))And Eigen ((par e p )))(0 )(Children (Node Expression (0 0 )(((assign (par e p )((par e 1 )ip(par e 2 ))))((call ((Check (3 ))0 )(args (arg (*(par e 1 ))(*(par e 2 ))))))))(Node Expression (0 1 )((Always )((call ((Check (1 3 ))0 )(args (arg (par e p )))))))))
Successors are raised:
(Node (Function ((Check (3 ))0 )Merged With ((par e 1 )(par e 2 ))And Eigen ((par e 1 )))(0 0 )(Children (Node Expression (0 0 0 )(((assign (par e 1 )((par t 1 )(par e 14 ))))((call ((Check (3 ))0 )(args (arg (*(par e 14 ))(*(par e 2 ))))))))(Node Expression (0 0 1 )(((assign (par e 1 )()))((call (Check 0 )(args (arg (par e 2 )))))))))
Successors are raised:
(Node (Function ((Check (1 3 ))0 )Merged With ((par e p ))And Eigen ((par e p )))(0 1 )(Children (Node Expression (0 1 0 )(((assign (par e p )()))(T)))(Node Expression (0 1 1 )(((assign (par e p )((par t 3 )(par e 53 ))))((call ((Check (1 3 ))0 )(args (arg (par e 53 )))))))))
