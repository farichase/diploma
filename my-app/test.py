a = "(Node (Finished)(0 )()(()((call Check_0(arg (par e x1 )))))(Children (Node (Finished)(0 0 )((assign (par e x1 )(AB(par e 1 ))))(let (assign (par e x1 )((par e 1 )))in ((call Check_0(arg (par e x1 )))))(Children (Node (Looped )(0 0 0 )()(()((call Check_0(arg (par e x1 )))))(Looped to (0 )((assign (par e x1 )((par e 1 ))))))(Node (Finished)(0 0 1 )()(()((par e 1 ))))))(Node (Finished)(0 1 )((assign (par e x1 )((par e 2 )(par t 1 )AB(par e 3 ))))(()((call Check_1(arg (*(par e 2 ))(par t 1 )(*(par e 3 ))))))(Children (Node (Finished)(0 1 0 )((assign (par e 2 )())(assign (par t 1 )(A))(assign (par e 3 )(B(par e 21 ))))(let (assign (par e x1 )((par e 21 )))in ((call Check_0(arg (par e x1 )))))(Children (Node (Looped )(0 1 0 0 )()(()((call Check_0(arg (par e x1 )))))(Looped to (0 )((assign (par e x1 )((par e 21 ))))))(Node (Finished)(0 1 0 1 )()(()((par e 21 ))))))(Node (Finished)(0 1 1 )((assign (par e 2 )((par e 22 )(par t 7 )))(assign (par t 1 )(A))(assign (par e 3 )(B(par e 23 ))))(let (assign (par e 2 )((par e 22 )))(assign (par t 1 )((par t 7 )))(assign (par e 3 )((par e 23 )))in ((call Check_1(arg (*(par e 2 ))(par t 1 )(*(par e 3 ))))))(Children (Node (Looped )(0 1 1 0 )()(()((call Check_1(arg (*(par e 2 ))(par t 1 )(*(par e 3 ))))))(Looped to (0 1 )((assign (par e 2 )((par e 22 )))(assign (par t 1 )((par t 7 )))(assign (par e 3 )((par e 23 ))))))(Node (Finished)(0 1 1 1 )()(()((par e 22 ))))(Node (Finished)(0 1 1 2 )()(()((par t 7 ))))(Node (Finished)(0 1 1 3 )()(()((par e 23 ))))))(Node (Finished)(0 1 2 )((assign (par e 3 )(AB(par e 29 ))))(let (assign (par t 1 )((par t 1 )))(assign (par e 3 )((par e 29 )))in ((call Check_1(arg (*(par e 2 ))(par t 1 )(*(par e 3 ))))))(Children (Node (Looped )(0 1 2 0 )()(()((call Check_1(arg (*(par e 2 ))(par t 1 )(*(par e 3 ))))))(Looped to (0 1 )((assign (par t 1 )((par t 1 )))(assign (par e 3 )((par e 29 ))))))(Node (Finished)(0 1 2 1 )()(()((par t 1 ))))(Node (Finished)(0 1 2 2 )()(()((par e 29 ))))))(Node (Finished)(0 1 3 )((assign (par e 3 )((par e 35 )(par t 12 )AB(par e 36 ))))(()((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 ))(par t 12 )(*(par e 36 ))))))(Children (Node (Finished)(0 1 3 0 )((assign (par e 35 )((par e 164 )(par t 60 )))(assign (par t 12 )(A))(assign (par e 36 )(B(par e 165 ))))(let (assign (par t 1 )((par t 1 )))(assign (par e 35 )((par e 164 )))(assign (par t 12 )((par t 60 )))(assign (par e 36 )((par e 165 )))in ((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 ))(par t 12 )(*(par e 36 ))))))(Children (Node (Looped )(0 1 3 0 0 )()(()((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 ))(par t 12 )(*(par e 36 ))))))(Looped to (0 1 3 )((assign (par t 1 )((par t 1 )))(assign (par e 35 )((par e 164 )))(assign (par t 12 )((par t 60 )))(assign (par e 36 )((par e 165 ))))))(Node (Finished)(0 1 3 0 1 )()(()((par t 1 ))))(Node (Finished)(0 1 3 0 2 )()(()((par e 164 ))))(Node (Finished)(0 1 3 0 3 )()(()((par t 60 ))))(Node (Finished)(0 1 3 0 4 )()(()((par e 165 ))))))(Node (Finished)(0 1 3 1 )((assign (par e 35 )())(assign (par t 12 )(A))(assign (par e 36 )(B(par e 179 ))))(let (assign (par t 1 )((par t 1 )))(assign (par e 3 )((par e 179 )))in ((call Check_1(arg (*(par e 2 ))(par t 1 )(*(par e 3 ))))))(Children (Node (Looped )(0 1 3 1 0 )()(()((call Check_1(arg (*(par e 2 ))(par t 1 )(*(par e 3 ))))))(Looped to (0 1 )((assign (par t 1 )((par t 1 )))(assign (par e 3 )((par e 179 ))))))(Node (Finished)(0 1 3 1 1 )()(()((par t 1 ))))(Node (Finished)(0 1 3 1 2 )()(()((par e 179 ))))))(Node (Finished)(0 1 3 2 )((assign (par e 36 )(AB(par e 186 ))))(let (assign (par t 1 )((par t 1 )))(assign (par t 12 )((par t 12 )))(assign (par e 36 )((par e 186 )))in ((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 ))(par t 12 )(*(par e 36 ))))))(Children (Node (Looped )(0 1 3 2 0 )()(()((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 ))(par t 12 )(*(par e 36 ))))))(Looped to (0 1 3 )((assign (par t 1 )((par t 1 )))(assign (par t 12 )((par t 12 )))(assign (par e 36 )((par e 186 ))))))(Node (Finished)(0 1 3 2 1 )()(()((par t 1 ))))(Node (Finished)(0 1 3 2 2 )()(()((par t 12 ))))(Node (Finished)(0 1 3 2 3 )()(()((par e 186 ))))))(Node (Finished)(0 1 3 3 )((assign (par e 36 )((par e 200 )(par t 77 )AB(par e 201 ))))(()((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 )(par t 12 )(par e 200 ))(par t 77 )(*(par e 201 ))))))(Children (Node (Finished)(0 1 3 3 0 )((assign (par e 200 )((par e 480 )(par t 200 )))(assign (par t 77 )(A))(assign (par e 201 )(B(par e 481 ))))(let (assign (par t 1 )((par t 1 )))(assign (par e 35 )((par e 35 )))(assign (par t 12 )((par t 12 )))(assign (par e 200 )((par e 480 )))(assign (par t 77 )((par t 200 )))(assign (par e 201 )((par e 481 )))in ((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 )(par t 12 )(par e 200 ))(par t 77 )(*(par e 201 ))))))(Children (Node (Looped )(0 1 3 3 0 0 )()(()((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 )(par t 12 )(par e 200 ))(par t 77 )(*(par e 201 ))))))(Looped to (0 1 3 3 )((assign (par t 1 )((par t 1 )))(assign (par e 35 )((par e 35 )))(assign (par t 12 )((par t 12 )))(assign (par e 200 )((par e 480 )))(assign (par t 77 )((par t 200 )))(assign (par e 201 )((par e 481 ))))))(Node (Finished)(0 1 3 3 0 1 )()(()((par t 1 ))))(Node (Finished)(0 1 3 3 0 2 )()(()((par e 35 ))))(Node (Finished)(0 1 3 3 0 3 )()(()((par t 12 ))))(Node (Finished)(0 1 3 3 0 4 )()(()((par e 480 ))))(Node (Finished)(0 1 3 3 0 5 )()(()((par t 200 ))))(Node (Finished)(0 1 3 3 0 6 )()(()((par e 481 ))))))(Node (Finished)(0 1 3 3 1 )((assign (par e 200 )())(assign (par t 77 )(A))(assign (par e 201 )(B(par e 482 ))))(let (assign (par t 1 )((par t 1 )))(assign (par t 12 )((par t 12 )))(assign (par e 36 )((par e 482 )))in ((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 ))(par t 12 )(*(par e 36 ))))))(Children (Node (Looped )(0 1 3 3 1 0 )()(()((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 ))(par t 12 )(*(par e 36 ))))))(Looped to (0 1 3 )((assign (par t 1 )((par t 1 )))(assign (par t 12 )((par t 12 )))(assign (par e 36 )((par e 482 ))))))(Node (Finished)(0 1 3 3 1 1 )()(()((par t 1 ))))(Node (Finished)(0 1 3 3 1 2 )()(()((par t 12 ))))(Node (Finished)(0 1 3 3 1 3 )()(()((par e 482 ))))))(Node (Finished)(0 1 3 3 2 )((assign (par e 201 )(AB(par e 519 ))))(let (assign (par t 1 )((par t 1 )))(assign (par t 77 )((par t 77 )))(assign (par e 201 )((par e 519 )))in ((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 )(par t 12 )(par e 200 ))(par t 77 )(*(par e 201 ))))))(Children (Node (Looped )(0 1 3 3 2 0 )()(()((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 )(par t 12 )(par e 200 ))(par t 77 )(*(par e 201 ))))))(Looped to (0 1 3 3 )((assign (par t 1 )((par t 1 )))(assign (par t 77 )((par t 77 )))(assign (par e 201 )((par e 519 ))))))(Node (Finished)(0 1 3 3 2 1 )()(()((par t 1 ))))(Node (Finished)(0 1 3 3 2 2 )()(()((par t 77 ))))(Node (Finished)(0 1 3 3 2 3 )()(()((par e 519 ))))))(Node (Finished)(0 1 3 3 3 )((assign (par e 201 )((par e 541 )(par t 229 )AB(par e 542 ))))(let (assign (par e 1189 )((par e 200 )(par t 77 )(par e 541 )))(assign (par t 523 )((par t 229 )))(assign (par e 1191 )((par e 542 )))in ((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 )(par t 12 )(par e 1189 ))(par t 523 )(*(par e 1191 ))))))(Children (Node (Looped )(0 1 3 3 3 0 )()(()((call Check_2(arg (*(par e 2 ))(par t 1 )(*(par e 35 )(par t 12 )(par e 1189 ))(par t 523 )(*(par e 1191 ))))))(Looped to (0 1 3 3 )((assign (par t 1 )((par t 1 )))(assign (par e 35 )((par e 35 )))(assign (par t 12 )((par t 12 )))(assign (par e 200 )((par e 1189 )))(assign (par t 77 )((par t 523 )))(assign (par e 201 )((par e 1191 ))))))(Node (Finished)(0 1 3 3 3 1 )()(()((par e 200 )(par t 77 )(par e 541 ))))(Node (Finished)(0 1 3 3 3 2 )()(()((par t 229 ))))(Node (Finished)(0 1 3 3 3 3 )()(()((par e 542 ))))))(Node (Finished)(0 1 3 3 4 )()(()(T)))))(Node (Finished)(0 1 3 4 )()(()(T)))))(Node (Finished)(0 1 4 )()(()(T)))))(Node (Finished)(0 2 )()(()(T)))))"
b = a.replace("Looped to", "---------").replace("Looped", "Finished").replace("---------", "Looped to")
print(b)