
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'TkAreEqual TkArg TkAssign TkCall TkChildren TkCloseBracket TkE TkIdent TkIn TkInequal TkLet TkLooped TkMul TkNode TkNotEqual TkOpenBracket TkOr TkPar TkS TkStatus TkT TkTo TkTopCall TkValueunit : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracketmulti_expression :\n                        | expression multi_expressionexpression : assignment\n                  | exprname : TkIdent\n            | TkIdent nameassignment :\n                 | TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment\n                 | TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignmentexpr :\n            | param expr\n            | const expr\n            | TkOpenBracket TkMul expr TkCloseBracket expr\n            | TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket exprstackexpr :\n                 | param stackexpr\n                 | const stackexpr\n                 | TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr\n                 | TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr\n                 | TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexprparam : TkOpenBracket TkPar class name TkCloseBracketclass : TkE\n             | TkS\n             | TkTnodedata : TkOpenBracket constraints TkCloseBracket TkOpenBracket stackexpr TkCloseBracket\n                | TkLet assignment TkIn TkOpenBracket expr TkCloseBracketconst : TkValue\n             | name\n             | TkValue const\n             | name constconstraints :\n                   | TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints\n                   | negative constraintsnegative :\n                | TkOpenBracket TkOr simplenegative TkCloseBracket negativesimplenegative : TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket\n                      | TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative\n                      | TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket\n                      | TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegativelinks :\n             | construction multiconstruction\n             | constructionmulticonstruction : construction multiconstruction\n                         | constructionconstruction : TkOpenBracket TkChildren multiunit TkCloseBracket\n                    | TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket multiunit : unit multiunit\n                 | unit'
    
_lr_action_items = {'TkOpenBracket':([0,3,6,9,10,11,12,14,16,17,18,19,20,21,22,23,24,27,28,30,32,33,35,36,38,43,44,46,49,51,53,54,55,56,59,60,64,66,67,68,72,73,74,77,80,81,83,84,86,87,89,91,92,93,96,97,99,100,103,104,105,106,107,109,110,116,120,121,122,125,126,130,131,134,137,139,140,141,142,143,154,155,156,157,],[2,4,7,-6,12,-7,13,-29,13,-4,-5,31,31,-28,34,36,31,-31,43,-12,-13,-30,44,31,47,49,31,31,57,62,64,-14,31,-22,57,70,31,77,78,80,70,86,62,31,94,2,-1,70,31,-9,31,34,107,108,94,94,2,118,62,-15,121,122,31,-36,94,-46,-10,31,31,132,133,137,94,141,31,94,31,62,57,78,78,94,94,-47,]),'$end':([1,83,],[0,-1,]),'TkNode':([2,],[3,]),'TkStatus':([4,],[5,]),'TkCloseBracket':([5,8,9,11,12,14,15,16,17,18,19,20,21,24,27,29,30,32,33,36,37,44,45,46,48,49,50,52,54,55,56,58,59,60,63,64,65,69,71,72,74,75,76,77,79,80,83,84,85,86,87,88,89,90,93,95,96,97,98,99,101,102,103,104,107,109,110,113,114,115,116,117,119,120,121,122,123,124,127,128,129,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,],[6,10,-6,-7,-2,-29,28,-2,-4,-5,-11,-11,-28,-11,-31,-3,-12,-13,-30,-11,46,-11,53,-11,56,-32,60,63,-14,-11,-22,68,-32,-41,74,-11,76,-34,83,-43,-8,88,89,-11,93,-16,-1,-45,-42,-11,-9,103,-11,105,-35,113,-16,-16,116,-49,-44,119,-8,-15,-11,-36,-16,-26,-17,-18,-46,-48,-27,-10,-11,-11,130,131,134,135,136,-16,142,143,-11,-19,-16,-11,-8,-32,-37,150,151,152,153,-33,-38,154,155,156,157,-39,-16,-16,-47,-40,-20,-21,]),'TkIdent':([7,9,11,12,14,16,17,18,19,20,21,24,25,27,30,32,33,36,39,40,41,42,44,46,54,55,56,64,74,77,80,86,87,89,96,97,103,104,107,110,111,112,118,120,121,122,131,137,139,140,155,156,],[9,9,-7,9,9,9,-4,-5,9,9,9,9,9,-31,-12,-13,-30,9,9,-23,-24,-25,9,9,-14,9,-22,9,-8,9,9,9,-9,9,9,9,-8,-15,9,9,9,9,9,-10,9,9,9,9,9,9,9,9,]),'TkValue':([9,11,12,14,16,17,18,19,20,21,24,27,30,32,33,36,44,46,54,55,56,64,74,77,80,86,87,89,96,97,103,104,107,110,120,121,122,131,137,139,140,155,156,],[-6,-7,21,21,21,-4,-5,21,21,21,21,-31,-12,-13,-30,21,21,21,-14,21,-22,21,-8,21,21,21,-9,21,21,21,-8,-15,21,21,-10,21,21,21,21,21,21,21,21,]),'TkAssign':([13,62,],[22,22,]),'TkAreEqual':([13,57,62,],[23,66,23,]),'TkMul':([13,31,94,],[24,24,110,]),'TkCall':([13,31,94,],[25,25,111,]),'TkPar':([13,31,34,94,],[26,26,26,26,]),'TkE':([26,],[40,]),'TkS':([26,],[41,]),'TkT':([26,],[42,]),'TkLet':([43,],[51,]),'TkArg':([47,132,133,],[55,139,140,]),'TkIn':([51,61,74,87,103,120,],[-8,73,-8,-9,-8,-10,]),'TkOr':([57,108,],[67,67,]),'TkChildren':([70,],[81,]),'TkLooped':([70,],[82,]),'TkInequal':([78,],[91,]),'TkNotEqual':([78,],[92,]),'TkTo':([82,],[100,]),'TkTopCall':([94,],[112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'unit':([0,81,99,],[1,99,99,]),'name':([7,9,12,14,16,19,20,21,24,25,36,39,44,46,55,64,77,80,86,89,96,97,107,110,111,112,118,121,122,131,137,139,140,155,156,],[8,11,14,14,14,14,14,14,14,38,14,48,14,14,14,14,14,14,14,14,14,14,14,14,125,126,127,14,14,14,14,14,14,14,14,]),'multi_expression':([12,16,],[15,29,]),'expression':([12,16,],[16,16,]),'assignment':([12,16,51,74,103,141,],[17,17,61,87,120,147,]),'expr':([12,16,19,20,24,36,44,46,55,64,77,86,89,107,121,122,137,140,],[18,18,30,32,37,45,52,54,65,75,90,102,104,123,128,129,144,146,]),'param':([12,16,19,20,22,24,36,44,46,55,64,77,80,86,89,91,96,97,107,110,121,122,131,137,139,140,155,156,],[19,19,19,19,35,19,19,19,19,19,19,19,96,19,19,106,96,96,19,96,19,19,96,19,96,19,96,96,]),'const':([12,14,16,19,20,21,24,36,44,46,55,64,77,80,86,89,96,97,107,110,121,122,131,137,139,140,155,156,],[20,27,20,20,20,33,20,20,20,20,20,20,20,97,20,20,97,97,20,97,20,20,97,20,97,20,97,97,]),'class':([26,],[39,]),'nodedata':([43,],[50,]),'constraints':([49,59,142,],[58,69,148,]),'negative':([49,59,93,142,],[59,59,109,59,]),'links':([60,],[71,]),'construction':([60,72,84,],[72,84,84,]),'simplenegative':([67,143,154,],[79,149,158,]),'multiconstruction':([72,84,],[85,101,]),'stackexpr':([80,96,97,110,131,139,155,156,],[95,114,115,124,138,145,159,160,]),'multiunit':([81,99,],[98,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> unit","S'",1,None,None,None),
  ('unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket','unit',16,'p_unit','parser.py',298),
  ('multi_expression -> <empty>','multi_expression',0,'p_multi_expression','parser.py',307),
  ('multi_expression -> expression multi_expression','multi_expression',2,'p_multi_expression','parser.py',308),
  ('expression -> assignment','expression',1,'p_expression','parser.py',321),
  ('expression -> expr','expression',1,'p_expression','parser.py',322),
  ('name -> TkIdent','name',1,'p_name','parser.py',327),
  ('name -> TkIdent name','name',2,'p_name','parser.py',328),
  ('assignment -> <empty>','assignment',0,'p_assignment','parser.py',337),
  ('assignment -> TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment','assignment',8,'p_assignment','parser.py',338),
  ('assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment','assignment',10,'p_assignment','parser.py',339),
  ('expr -> <empty>','expr',0,'p_expr','parser.py',352),
  ('expr -> param expr','expr',2,'p_expr','parser.py',353),
  ('expr -> const expr','expr',2,'p_expr','parser.py',354),
  ('expr -> TkOpenBracket TkMul expr TkCloseBracket expr','expr',5,'p_expr','parser.py',355),
  ('expr -> TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr','expr',9,'p_expr','parser.py',356),
  ('stackexpr -> <empty>','stackexpr',0,'p_stackexpr','parser.py',372),
  ('stackexpr -> param stackexpr','stackexpr',2,'p_stackexpr','parser.py',373),
  ('stackexpr -> const stackexpr','stackexpr',2,'p_stackexpr','parser.py',374),
  ('stackexpr -> TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr','stackexpr',5,'p_stackexpr','parser.py',375),
  ('stackexpr -> TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr','stackexpr',9,'p_stackexpr','parser.py',376),
  ('stackexpr -> TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr','stackexpr',9,'p_stackexpr','parser.py',377),
  ('param -> TkOpenBracket TkPar class name TkCloseBracket','param',5,'p_param','parser.py',395),
  ('class -> TkE','class',1,'p_class','parser.py',400),
  ('class -> TkS','class',1,'p_class','parser.py',401),
  ('class -> TkT','class',1,'p_class','parser.py',402),
  ('nodedata -> TkOpenBracket constraints TkCloseBracket TkOpenBracket stackexpr TkCloseBracket','nodedata',6,'p_nodedata','parser.py',407),
  ('nodedata -> TkLet assignment TkIn TkOpenBracket expr TkCloseBracket','nodedata',6,'p_nodedata','parser.py',408),
  ('const -> TkValue','const',1,'p_const','parser.py',417),
  ('const -> name','const',1,'p_const','parser.py',418),
  ('const -> TkValue const','const',2,'p_const','parser.py',419),
  ('const -> name const','const',2,'p_const','parser.py',420),
  ('constraints -> <empty>','constraints',0,'p_constraints','parser.py',430),
  ('constraints -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints','constraints',10,'p_constraints','parser.py',431),
  ('constraints -> negative constraints','constraints',2,'p_constraints','parser.py',432),
  ('negative -> <empty>','negative',0,'p_negative','parser.py',444),
  ('negative -> TkOpenBracket TkOr simplenegative TkCloseBracket negative','negative',5,'p_negative','parser.py',445),
  ('simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket','simplenegative',7,'p_simplenegative','parser.py',454),
  ('simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative','simplenegative',8,'p_simplenegative','parser.py',455),
  ('simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket','simplenegative',9,'p_simplenegative','parser.py',456),
  ('simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative','simplenegative',10,'p_simplenegative','parser.py',457),
  ('links -> <empty>','links',0,'p_links','parser.py',472),
  ('links -> construction multiconstruction','links',2,'p_links','parser.py',473),
  ('links -> construction','links',1,'p_links','parser.py',474),
  ('multiconstruction -> construction multiconstruction','multiconstruction',2,'p_multiconstruction','parser.py',487),
  ('multiconstruction -> construction','multiconstruction',1,'p_multiconstruction','parser.py',488),
  ('construction -> TkOpenBracket TkChildren multiunit TkCloseBracket','construction',4,'p_construction','parser.py',497),
  ('construction -> TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket','construction',10,'p_construction','parser.py',498),
  ('multiunit -> unit multiunit','multiunit',2,'p_multiunit','parser.py',510),
  ('multiunit -> unit','multiunit',1,'p_multiunit','parser.py',511),
]
