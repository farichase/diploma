Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> unit
Rule 1     unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket
Rule 2     multi_expression -> <empty>
Rule 3     multi_expression -> expression multi_expression
Rule 4     expression -> assignment
Rule 5     expression -> expr
Rule 6     name -> TkIdent
Rule 7     name -> TkIdent name
Rule 8     assignment -> <empty>
Rule 9     assignment -> TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
Rule 10    assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
Rule 11    expr -> <empty>
Rule 12    expr -> param expr
Rule 13    expr -> const expr
Rule 14    expr -> TkOpenBracket TkMul expr TkCloseBracket expr
Rule 15    expr -> TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
Rule 16    stackexpr -> <empty>
Rule 17    stackexpr -> param stackexpr
Rule 18    stackexpr -> const stackexpr
Rule 19    stackexpr -> TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr
Rule 20    stackexpr -> TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
Rule 21    stackexpr -> TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
Rule 22    param -> TkOpenBracket TkPar class name TkCloseBracket
Rule 23    class -> TkE
Rule 24    class -> TkS
Rule 25    class -> TkT
Rule 26    nodedata -> TkOpenBracket constraints TkCloseBracket TkOpenBracket stackexpr TkCloseBracket
Rule 27    nodedata -> TkLet assignment TkIn TkOpenBracket expr TkCloseBracket
Rule 28    const -> TkValue
Rule 29    const -> name
Rule 30    const -> TkValue const
Rule 31    const -> name const
Rule 32    constraints -> <empty>
Rule 33    constraints -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints
Rule 34    constraints -> negative constraints
Rule 35    negative -> <empty>
Rule 36    negative -> TkOpenBracket TkOr simplenegative TkCloseBracket negative
Rule 37    simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket
Rule 38    simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative
Rule 39    simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket
Rule 40    simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative
Rule 41    links -> <empty>
Rule 42    links -> construction multiconstruction
Rule 43    links -> construction
Rule 44    multiconstruction -> construction multiconstruction
Rule 45    multiconstruction -> construction
Rule 46    construction -> TkOpenBracket TkChildren multiunit TkCloseBracket
Rule 47    construction -> TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket
Rule 48    multiunit -> unit multiunit
Rule 49    multiunit -> unit

Terminals, with rules where they appear

TkAreEqual           : 10 33
TkArg                : 15 20 21
TkAssign             : 9
TkCall               : 15 20
TkChildren           : 46
TkCloseBracket       : 1 1 1 1 1 9 9 10 10 10 14 15 15 19 20 20 21 21 22 26 26 27 33 33 33 36 37 37 38 38 39 39 39 40 40 40 46 47 47 47
TkE                  : 23
TkIdent              : 6 7
TkIn                 : 27
TkInequal            : 37 38
TkLet                : 27
TkLooped             : 47
TkMul                : 14 19
TkNode               : 1
TkNotEqual           : 39 40
TkOpenBracket        : 1 1 1 1 1 9 9 10 10 10 14 15 15 19 20 20 21 21 22 26 26 27 33 33 33 36 37 37 38 38 39 39 39 40 40 40 46 47 47 47
TkOr                 : 36
TkPar                : 22
TkS                  : 24
TkStatus             : 1
TkT                  : 25
TkTo                 : 47
TkTopCall            : 21
TkValue              : 28 30
error                : 

Nonterminals, with rules where they appear

assignment           : 4 9 10 27 47
class                : 22
const                : 13 18 30 31
constraints          : 26 33 34
construction         : 42 43 44 45
expr                 : 5 9 10 10 12 13 14 14 15 15 21 27 33 33 37 38 39 39 40 40
expression           : 3
links                : 1
multi_expression     : 1 3
multiconstruction    : 42 44
multiunit            : 46 48
name                 : 1 7 15 20 21 22 29 31 47
negative             : 34 36
nodedata             : 1
param                : 9 12 17 37 38
simplenegative       : 36 38 40
stackexpr            : 17 18 19 19 20 20 21 26
unit                 : 48 49 0

Parsing method: LALR

state 0

    (0) S' -> . unit
    (1) unit -> . TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkOpenBracket   shift and go to state 2

    unit                           shift and go to state 1

state 1

    (0) S' -> unit .



state 2

    (1) unit -> TkOpenBracket . TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkNode          shift and go to state 3


state 3

    (1) unit -> TkOpenBracket TkNode . TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkOpenBracket   shift and go to state 4


state 4

    (1) unit -> TkOpenBracket TkNode TkOpenBracket . TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkStatus        shift and go to state 5


state 5

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus . TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkCloseBracket  shift and go to state 6


state 6

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket . TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkOpenBracket   shift and go to state 7


state 7

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket . name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkIdent         shift and go to state 9

    name                           shift and go to state 8

state 8

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name . TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkCloseBracket  shift and go to state 10


state 9

    (6) name -> TkIdent .
    (7) name -> TkIdent . name
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

  ! shift/reduce conflict for TkIdent resolved as shift
    TkCloseBracket  reduce using rule 6 (name -> TkIdent .)
    TkValue         reduce using rule 6 (name -> TkIdent .)
    TkOpenBracket   reduce using rule 6 (name -> TkIdent .)
    TkIdent         shift and go to state 9

  ! TkIdent         [ reduce using rule 6 (name -> TkIdent .) ]

    name                           shift and go to state 11

state 10

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket . TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkOpenBracket   shift and go to state 12


state 11

    (7) name -> TkIdent name .

    TkCloseBracket  reduce using rule 7 (name -> TkIdent name .)
    TkValue         reduce using rule 7 (name -> TkIdent name .)
    TkIdent         reduce using rule 7 (name -> TkIdent name .)
    TkOpenBracket   reduce using rule 7 (name -> TkIdent name .)


state 12

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket . multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket
    (2) multi_expression -> .
    (3) multi_expression -> . expression multi_expression
    (4) expression -> . assignment
    (5) expression -> . expr
    (8) assignment -> .
    (9) assignment -> . TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (10) assignment -> . TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

  ! reduce/reduce conflict for TkCloseBracket resolved using rule 2 (multi_expression -> .)
  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! reduce/reduce conflict for TkValue resolved using rule 8 (assignment -> .)
  ! reduce/reduce conflict for TkIdent resolved using rule 8 (assignment -> .)
  ! reduce/reduce conflict for TkCloseBracket resolved using rule 2 (multi_expression -> .)
  ! shift/reduce conflict for TkValue resolved as shift
  ! shift/reduce conflict for TkIdent resolved as shift
    TkCloseBracket  reduce using rule 2 (multi_expression -> .)
    TkOpenBracket   shift and go to state 13
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

  ! TkOpenBracket   [ reduce using rule 8 (assignment -> .) ]
  ! TkValue         [ reduce using rule 8 (assignment -> .) ]
  ! TkIdent         [ reduce using rule 8 (assignment -> .) ]
  ! TkCloseBracket  [ reduce using rule 8 (assignment -> .) ]
  ! TkOpenBracket   [ reduce using rule 11 (expr -> .) ]
  ! TkValue         [ reduce using rule 11 (expr -> .) ]
  ! TkIdent         [ reduce using rule 11 (expr -> .) ]
  ! TkCloseBracket  [ reduce using rule 11 (expr -> .) ]

    name                           shift and go to state 14
    multi_expression               shift and go to state 15
    expression                     shift and go to state 16
    assignment                     shift and go to state 17
    expr                           shift and go to state 18
    param                          shift and go to state 19
    const                          shift and go to state 20

state 13

    (9) assignment -> TkOpenBracket . TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (10) assignment -> TkOpenBracket . TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (14) expr -> TkOpenBracket . TkMul expr TkCloseBracket expr
    (15) expr -> TkOpenBracket . TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> TkOpenBracket . TkPar class name TkCloseBracket

    TkAssign        shift and go to state 22
    TkAreEqual      shift and go to state 23
    TkMul           shift and go to state 24
    TkCall          shift and go to state 25
    TkPar           shift and go to state 26


state 14

    (29) const -> name .
    (31) const -> name . const
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

  ! shift/reduce conflict for TkValue resolved as shift
  ! shift/reduce conflict for TkIdent resolved as shift
    TkOpenBracket   reduce using rule 29 (const -> name .)
    TkCloseBracket  reduce using rule 29 (const -> name .)
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

  ! TkValue         [ reduce using rule 29 (const -> name .) ]
  ! TkIdent         [ reduce using rule 29 (const -> name .) ]

    name                           shift and go to state 14
    const                          shift and go to state 27

state 15

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression . TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkCloseBracket  shift and go to state 28


state 16

    (3) multi_expression -> expression . multi_expression
    (2) multi_expression -> .
    (3) multi_expression -> . expression multi_expression
    (4) expression -> . assignment
    (5) expression -> . expr
    (8) assignment -> .
    (9) assignment -> . TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (10) assignment -> . TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

  ! reduce/reduce conflict for TkCloseBracket resolved using rule 2 (multi_expression -> .)
  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! reduce/reduce conflict for TkValue resolved using rule 8 (assignment -> .)
  ! reduce/reduce conflict for TkIdent resolved using rule 8 (assignment -> .)
  ! reduce/reduce conflict for TkCloseBracket resolved using rule 2 (multi_expression -> .)
  ! shift/reduce conflict for TkValue resolved as shift
  ! shift/reduce conflict for TkIdent resolved as shift
    TkCloseBracket  reduce using rule 2 (multi_expression -> .)
    TkOpenBracket   shift and go to state 13
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

  ! TkOpenBracket   [ reduce using rule 8 (assignment -> .) ]
  ! TkValue         [ reduce using rule 8 (assignment -> .) ]
  ! TkIdent         [ reduce using rule 8 (assignment -> .) ]
  ! TkCloseBracket  [ reduce using rule 8 (assignment -> .) ]
  ! TkOpenBracket   [ reduce using rule 11 (expr -> .) ]
  ! TkValue         [ reduce using rule 11 (expr -> .) ]
  ! TkIdent         [ reduce using rule 11 (expr -> .) ]
  ! TkCloseBracket  [ reduce using rule 11 (expr -> .) ]

    expression                     shift and go to state 16
    multi_expression               shift and go to state 29
    assignment                     shift and go to state 17
    expr                           shift and go to state 18
    param                          shift and go to state 19
    const                          shift and go to state 20
    name                           shift and go to state 14

state 17

    (4) expression -> assignment .

    TkOpenBracket   reduce using rule 4 (expression -> assignment .)
    TkValue         reduce using rule 4 (expression -> assignment .)
    TkIdent         reduce using rule 4 (expression -> assignment .)
    TkCloseBracket  reduce using rule 4 (expression -> assignment .)


state 18

    (5) expression -> expr .

    TkOpenBracket   reduce using rule 5 (expression -> expr .)
    TkValue         reduce using rule 5 (expression -> expr .)
    TkIdent         reduce using rule 5 (expression -> expr .)
    TkCloseBracket  reduce using rule 5 (expression -> expr .)


state 19

    (12) expr -> param . expr
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! shift/reduce conflict for TkValue resolved as shift
  ! shift/reduce conflict for TkIdent resolved as shift
    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

  ! TkOpenBracket   [ reduce using rule 11 (expr -> .) ]
  ! TkValue         [ reduce using rule 11 (expr -> .) ]
  ! TkIdent         [ reduce using rule 11 (expr -> .) ]

    param                          shift and go to state 19
    expr                           shift and go to state 30
    const                          shift and go to state 20
    name                           shift and go to state 14

state 20

    (13) expr -> const . expr
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! shift/reduce conflict for TkValue resolved as shift
  ! shift/reduce conflict for TkIdent resolved as shift
    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

  ! TkOpenBracket   [ reduce using rule 11 (expr -> .) ]
  ! TkValue         [ reduce using rule 11 (expr -> .) ]
  ! TkIdent         [ reduce using rule 11 (expr -> .) ]

    const                          shift and go to state 20
    expr                           shift and go to state 32
    param                          shift and go to state 19
    name                           shift and go to state 14

state 21

    (28) const -> TkValue .
    (30) const -> TkValue . const
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

  ! shift/reduce conflict for TkValue resolved as shift
  ! shift/reduce conflict for TkIdent resolved as shift
    TkOpenBracket   reduce using rule 28 (const -> TkValue .)
    TkCloseBracket  reduce using rule 28 (const -> TkValue .)
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

  ! TkValue         [ reduce using rule 28 (const -> TkValue .) ]
  ! TkIdent         [ reduce using rule 28 (const -> TkValue .) ]

    const                          shift and go to state 33
    name                           shift and go to state 14

state 22

    (9) assignment -> TkOpenBracket TkAssign . param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket

    TkOpenBracket   shift and go to state 34

    param                          shift and go to state 35

state 23

    (10) assignment -> TkOpenBracket TkAreEqual . TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment

    TkOpenBracket   shift and go to state 36


state 24

    (14) expr -> TkOpenBracket TkMul . expr TkCloseBracket expr
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    expr                           shift and go to state 37
    param                          shift and go to state 19
    const                          shift and go to state 20
    name                           shift and go to state 14

state 25

    (15) expr -> TkOpenBracket TkCall . name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkIdent         shift and go to state 9

    name                           shift and go to state 38

state 26

    (22) param -> TkOpenBracket TkPar . class name TkCloseBracket
    (23) class -> . TkE
    (24) class -> . TkS
    (25) class -> . TkT

    TkE             shift and go to state 40
    TkS             shift and go to state 41
    TkT             shift and go to state 42

    class                          shift and go to state 39

state 27

    (31) const -> name const .

    TkOpenBracket   reduce using rule 31 (const -> name const .)
    TkValue         reduce using rule 31 (const -> name const .)
    TkIdent         reduce using rule 31 (const -> name const .)
    TkCloseBracket  reduce using rule 31 (const -> name const .)


state 28

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket . TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkOpenBracket   shift and go to state 43


state 29

    (3) multi_expression -> expression multi_expression .

    TkCloseBracket  reduce using rule 3 (multi_expression -> expression multi_expression .)


state 30

    (12) expr -> param expr .

    TkOpenBracket   reduce using rule 12 (expr -> param expr .)
    TkValue         reduce using rule 12 (expr -> param expr .)
    TkIdent         reduce using rule 12 (expr -> param expr .)
    TkCloseBracket  reduce using rule 12 (expr -> param expr .)


state 31

    (14) expr -> TkOpenBracket . TkMul expr TkCloseBracket expr
    (15) expr -> TkOpenBracket . TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> TkOpenBracket . TkPar class name TkCloseBracket

    TkMul           shift and go to state 24
    TkCall          shift and go to state 25
    TkPar           shift and go to state 26


state 32

    (13) expr -> const expr .

    TkOpenBracket   reduce using rule 13 (expr -> const expr .)
    TkValue         reduce using rule 13 (expr -> const expr .)
    TkIdent         reduce using rule 13 (expr -> const expr .)
    TkCloseBracket  reduce using rule 13 (expr -> const expr .)


state 33

    (30) const -> TkValue const .

    TkOpenBracket   reduce using rule 30 (const -> TkValue const .)
    TkValue         reduce using rule 30 (const -> TkValue const .)
    TkIdent         reduce using rule 30 (const -> TkValue const .)
    TkCloseBracket  reduce using rule 30 (const -> TkValue const .)


state 34

    (22) param -> TkOpenBracket . TkPar class name TkCloseBracket

    TkPar           shift and go to state 26


state 35

    (9) assignment -> TkOpenBracket TkAssign param . TkOpenBracket expr TkCloseBracket TkCloseBracket assignment

    TkOpenBracket   shift and go to state 44


state 36

    (10) assignment -> TkOpenBracket TkAreEqual TkOpenBracket . expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    expr                           shift and go to state 45
    param                          shift and go to state 19
    const                          shift and go to state 20
    name                           shift and go to state 14

state 37

    (14) expr -> TkOpenBracket TkMul expr . TkCloseBracket expr

    TkCloseBracket  shift and go to state 46


state 38

    (15) expr -> TkOpenBracket TkCall name . TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr

    TkOpenBracket   shift and go to state 47


state 39

    (22) param -> TkOpenBracket TkPar class . name TkCloseBracket
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkIdent         shift and go to state 9

    name                           shift and go to state 48

state 40

    (23) class -> TkE .

    TkIdent         reduce using rule 23 (class -> TkE .)


state 41

    (24) class -> TkS .

    TkIdent         reduce using rule 24 (class -> TkS .)


state 42

    (25) class -> TkT .

    TkIdent         reduce using rule 25 (class -> TkT .)


state 43

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket . nodedata TkCloseBracket links TkCloseBracket
    (26) nodedata -> . TkOpenBracket constraints TkCloseBracket TkOpenBracket stackexpr TkCloseBracket
    (27) nodedata -> . TkLet assignment TkIn TkOpenBracket expr TkCloseBracket

    TkOpenBracket   shift and go to state 49
    TkLet           shift and go to state 51

    nodedata                       shift and go to state 50

state 44

    (9) assignment -> TkOpenBracket TkAssign param TkOpenBracket . expr TkCloseBracket TkCloseBracket assignment
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    param                          shift and go to state 19
    expr                           shift and go to state 52
    const                          shift and go to state 20
    name                           shift and go to state 14

state 45

    (10) assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr . TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment

    TkCloseBracket  shift and go to state 53


state 46

    (14) expr -> TkOpenBracket TkMul expr TkCloseBracket . expr
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! shift/reduce conflict for TkValue resolved as shift
  ! shift/reduce conflict for TkIdent resolved as shift
    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

  ! TkOpenBracket   [ reduce using rule 11 (expr -> .) ]
  ! TkValue         [ reduce using rule 11 (expr -> .) ]
  ! TkIdent         [ reduce using rule 11 (expr -> .) ]

    expr                           shift and go to state 54
    param                          shift and go to state 19
    const                          shift and go to state 20
    name                           shift and go to state 14

state 47

    (15) expr -> TkOpenBracket TkCall name TkOpenBracket . TkArg expr TkCloseBracket TkCloseBracket expr

    TkArg           shift and go to state 55


state 48

    (22) param -> TkOpenBracket TkPar class name . TkCloseBracket

    TkCloseBracket  shift and go to state 56


state 49

    (26) nodedata -> TkOpenBracket . constraints TkCloseBracket TkOpenBracket stackexpr TkCloseBracket
    (32) constraints -> .
    (33) constraints -> . TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints
    (34) constraints -> . negative constraints
    (35) negative -> .
    (36) negative -> . TkOpenBracket TkOr simplenegative TkCloseBracket negative

  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! reduce/reduce conflict for TkCloseBracket resolved using rule 32 (constraints -> .)
    TkCloseBracket  reduce using rule 32 (constraints -> .)
    TkOpenBracket   shift and go to state 57

  ! TkOpenBracket   [ reduce using rule 35 (negative -> .) ]
  ! TkCloseBracket  [ reduce using rule 35 (negative -> .) ]

    constraints                    shift and go to state 58
    negative                       shift and go to state 59

state 50

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata . TkCloseBracket links TkCloseBracket

    TkCloseBracket  shift and go to state 60


state 51

    (27) nodedata -> TkLet . assignment TkIn TkOpenBracket expr TkCloseBracket
    (8) assignment -> .
    (9) assignment -> . TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (10) assignment -> . TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment

    TkIn            reduce using rule 8 (assignment -> .)
    TkOpenBracket   shift and go to state 62

    assignment                     shift and go to state 61

state 52

    (9) assignment -> TkOpenBracket TkAssign param TkOpenBracket expr . TkCloseBracket TkCloseBracket assignment

    TkCloseBracket  shift and go to state 63


state 53

    (10) assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket . TkOpenBracket expr TkCloseBracket TkCloseBracket assignment

    TkOpenBracket   shift and go to state 64


state 54

    (14) expr -> TkOpenBracket TkMul expr TkCloseBracket expr .

    TkOpenBracket   reduce using rule 14 (expr -> TkOpenBracket TkMul expr TkCloseBracket expr .)
    TkValue         reduce using rule 14 (expr -> TkOpenBracket TkMul expr TkCloseBracket expr .)
    TkIdent         reduce using rule 14 (expr -> TkOpenBracket TkMul expr TkCloseBracket expr .)
    TkCloseBracket  reduce using rule 14 (expr -> TkOpenBracket TkMul expr TkCloseBracket expr .)


state 55

    (15) expr -> TkOpenBracket TkCall name TkOpenBracket TkArg . expr TkCloseBracket TkCloseBracket expr
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    name                           shift and go to state 14
    expr                           shift and go to state 65
    param                          shift and go to state 19
    const                          shift and go to state 20

state 56

    (22) param -> TkOpenBracket TkPar class name TkCloseBracket .

    TkOpenBracket   reduce using rule 22 (param -> TkOpenBracket TkPar class name TkCloseBracket .)
    TkValue         reduce using rule 22 (param -> TkOpenBracket TkPar class name TkCloseBracket .)
    TkIdent         reduce using rule 22 (param -> TkOpenBracket TkPar class name TkCloseBracket .)
    TkCloseBracket  reduce using rule 22 (param -> TkOpenBracket TkPar class name TkCloseBracket .)


state 57

    (33) constraints -> TkOpenBracket . TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints
    (36) negative -> TkOpenBracket . TkOr simplenegative TkCloseBracket negative

    TkAreEqual      shift and go to state 66
    TkOr            shift and go to state 67


state 58

    (26) nodedata -> TkOpenBracket constraints . TkCloseBracket TkOpenBracket stackexpr TkCloseBracket

    TkCloseBracket  shift and go to state 68


state 59

    (34) constraints -> negative . constraints
    (32) constraints -> .
    (33) constraints -> . TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints
    (34) constraints -> . negative constraints
    (35) negative -> .
    (36) negative -> . TkOpenBracket TkOr simplenegative TkCloseBracket negative

  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! reduce/reduce conflict for TkCloseBracket resolved using rule 32 (constraints -> .)
    TkCloseBracket  reduce using rule 32 (constraints -> .)
    TkOpenBracket   shift and go to state 57

  ! TkOpenBracket   [ reduce using rule 35 (negative -> .) ]
  ! TkCloseBracket  [ reduce using rule 35 (negative -> .) ]

    negative                       shift and go to state 59
    constraints                    shift and go to state 69

state 60

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket . links TkCloseBracket
    (41) links -> .
    (42) links -> . construction multiconstruction
    (43) links -> . construction
    (46) construction -> . TkOpenBracket TkChildren multiunit TkCloseBracket
    (47) construction -> . TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket

    TkCloseBracket  reduce using rule 41 (links -> .)
    TkOpenBracket   shift and go to state 70

    links                          shift and go to state 71
    construction                   shift and go to state 72

state 61

    (27) nodedata -> TkLet assignment . TkIn TkOpenBracket expr TkCloseBracket

    TkIn            shift and go to state 73


state 62

    (9) assignment -> TkOpenBracket . TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (10) assignment -> TkOpenBracket . TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment

    TkAssign        shift and go to state 22
    TkAreEqual      shift and go to state 23


state 63

    (9) assignment -> TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket . TkCloseBracket assignment

    TkCloseBracket  shift and go to state 74


state 64

    (10) assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket . expr TkCloseBracket TkCloseBracket assignment
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    expr                           shift and go to state 75
    param                          shift and go to state 19
    const                          shift and go to state 20
    name                           shift and go to state 14

state 65

    (15) expr -> TkOpenBracket TkCall name TkOpenBracket TkArg expr . TkCloseBracket TkCloseBracket expr

    TkCloseBracket  shift and go to state 76


state 66

    (33) constraints -> TkOpenBracket TkAreEqual . TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints

    TkOpenBracket   shift and go to state 77


state 67

    (36) negative -> TkOpenBracket TkOr . simplenegative TkCloseBracket negative
    (37) simplenegative -> . TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket
    (38) simplenegative -> . TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative
    (39) simplenegative -> . TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket
    (40) simplenegative -> . TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative

    TkOpenBracket   shift and go to state 78

    simplenegative                 shift and go to state 79

state 68

    (26) nodedata -> TkOpenBracket constraints TkCloseBracket . TkOpenBracket stackexpr TkCloseBracket

    TkOpenBracket   shift and go to state 80


state 69

    (34) constraints -> negative constraints .

    TkCloseBracket  reduce using rule 34 (constraints -> negative constraints .)


state 70

    (46) construction -> TkOpenBracket . TkChildren multiunit TkCloseBracket
    (47) construction -> TkOpenBracket . TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket

    TkChildren      shift and go to state 81
    TkLooped        shift and go to state 82


state 71

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links . TkCloseBracket

    TkCloseBracket  shift and go to state 83


state 72

    (42) links -> construction . multiconstruction
    (43) links -> construction .
    (44) multiconstruction -> . construction multiconstruction
    (45) multiconstruction -> . construction
    (46) construction -> . TkOpenBracket TkChildren multiunit TkCloseBracket
    (47) construction -> . TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket

    TkCloseBracket  reduce using rule 43 (links -> construction .)
    TkOpenBracket   shift and go to state 70

    construction                   shift and go to state 84
    multiconstruction              shift and go to state 85

state 73

    (27) nodedata -> TkLet assignment TkIn . TkOpenBracket expr TkCloseBracket

    TkOpenBracket   shift and go to state 86


state 74

    (9) assignment -> TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket . assignment
    (8) assignment -> .
    (9) assignment -> . TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (10) assignment -> . TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment

  ! shift/reduce conflict for TkOpenBracket resolved as shift
    TkValue         reduce using rule 8 (assignment -> .)
    TkIdent         reduce using rule 8 (assignment -> .)
    TkCloseBracket  reduce using rule 8 (assignment -> .)
    TkIn            reduce using rule 8 (assignment -> .)
    TkOpenBracket   shift and go to state 62

  ! TkOpenBracket   [ reduce using rule 8 (assignment -> .) ]

    assignment                     shift and go to state 87

state 75

    (10) assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr . TkCloseBracket TkCloseBracket assignment

    TkCloseBracket  shift and go to state 88


state 76

    (15) expr -> TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket . TkCloseBracket expr

    TkCloseBracket  shift and go to state 89


state 77

    (33) constraints -> TkOpenBracket TkAreEqual TkOpenBracket . expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    expr                           shift and go to state 90
    param                          shift and go to state 19
    const                          shift and go to state 20
    name                           shift and go to state 14

state 78

    (37) simplenegative -> TkOpenBracket . TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket
    (38) simplenegative -> TkOpenBracket . TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative
    (39) simplenegative -> TkOpenBracket . TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket
    (40) simplenegative -> TkOpenBracket . TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative

    TkInequal       shift and go to state 91
    TkNotEqual      shift and go to state 92


state 79

    (36) negative -> TkOpenBracket TkOr simplenegative . TkCloseBracket negative

    TkCloseBracket  shift and go to state 93


state 80

    (26) nodedata -> TkOpenBracket constraints TkCloseBracket TkOpenBracket . stackexpr TkCloseBracket
    (16) stackexpr -> .
    (17) stackexpr -> . param stackexpr
    (18) stackexpr -> . const stackexpr
    (19) stackexpr -> . TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr
    (20) stackexpr -> . TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
    (21) stackexpr -> . TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 16 (stackexpr -> .)
    TkOpenBracket   shift and go to state 94
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    stackexpr                      shift and go to state 95
    param                          shift and go to state 96
    const                          shift and go to state 97
    name                           shift and go to state 14

state 81

    (46) construction -> TkOpenBracket TkChildren . multiunit TkCloseBracket
    (48) multiunit -> . unit multiunit
    (49) multiunit -> . unit
    (1) unit -> . TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkOpenBracket   shift and go to state 2

    multiunit                      shift and go to state 98
    unit                           shift and go to state 99

state 82

    (47) construction -> TkOpenBracket TkLooped . TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket

    TkTo            shift and go to state 100


state 83

    (1) unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket .

    $end            reduce using rule 1 (unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket .)
    TkOpenBracket   reduce using rule 1 (unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket .)
    TkCloseBracket  reduce using rule 1 (unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket .)


state 84

    (44) multiconstruction -> construction . multiconstruction
    (45) multiconstruction -> construction .
    (44) multiconstruction -> . construction multiconstruction
    (45) multiconstruction -> . construction
    (46) construction -> . TkOpenBracket TkChildren multiunit TkCloseBracket
    (47) construction -> . TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket

    TkCloseBracket  reduce using rule 45 (multiconstruction -> construction .)
    TkOpenBracket   shift and go to state 70

    construction                   shift and go to state 84
    multiconstruction              shift and go to state 101

state 85

    (42) links -> construction multiconstruction .

    TkCloseBracket  reduce using rule 42 (links -> construction multiconstruction .)


state 86

    (27) nodedata -> TkLet assignment TkIn TkOpenBracket . expr TkCloseBracket
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    expr                           shift and go to state 102
    param                          shift and go to state 19
    const                          shift and go to state 20
    name                           shift and go to state 14

state 87

    (9) assignment -> TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .

    TkOpenBracket   reduce using rule 9 (assignment -> TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .)
    TkValue         reduce using rule 9 (assignment -> TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .)
    TkIdent         reduce using rule 9 (assignment -> TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .)
    TkCloseBracket  reduce using rule 9 (assignment -> TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .)
    TkIn            reduce using rule 9 (assignment -> TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .)


state 88

    (10) assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket . TkCloseBracket assignment

    TkCloseBracket  shift and go to state 103


state 89

    (15) expr -> TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket . expr
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! shift/reduce conflict for TkValue resolved as shift
  ! shift/reduce conflict for TkIdent resolved as shift
    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

  ! TkOpenBracket   [ reduce using rule 11 (expr -> .) ]
  ! TkValue         [ reduce using rule 11 (expr -> .) ]
  ! TkIdent         [ reduce using rule 11 (expr -> .) ]

    name                           shift and go to state 14
    expr                           shift and go to state 104
    param                          shift and go to state 19
    const                          shift and go to state 20

state 90

    (33) constraints -> TkOpenBracket TkAreEqual TkOpenBracket expr . TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints

    TkCloseBracket  shift and go to state 105


state 91

    (37) simplenegative -> TkOpenBracket TkInequal . param TkOpenBracket expr TkCloseBracket TkCloseBracket
    (38) simplenegative -> TkOpenBracket TkInequal . param TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket

    TkOpenBracket   shift and go to state 34

    param                          shift and go to state 106

state 92

    (39) simplenegative -> TkOpenBracket TkNotEqual . TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket
    (40) simplenegative -> TkOpenBracket TkNotEqual . TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative

    TkOpenBracket   shift and go to state 107


state 93

    (36) negative -> TkOpenBracket TkOr simplenegative TkCloseBracket . negative
    (35) negative -> .
    (36) negative -> . TkOpenBracket TkOr simplenegative TkCloseBracket negative

  ! shift/reduce conflict for TkOpenBracket resolved as shift
    TkCloseBracket  reduce using rule 35 (negative -> .)
    TkOpenBracket   shift and go to state 108

  ! TkOpenBracket   [ reduce using rule 35 (negative -> .) ]

    negative                       shift and go to state 109

state 94

    (19) stackexpr -> TkOpenBracket . TkMul stackexpr TkCloseBracket stackexpr
    (20) stackexpr -> TkOpenBracket . TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
    (21) stackexpr -> TkOpenBracket . TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
    (22) param -> TkOpenBracket . TkPar class name TkCloseBracket

    TkMul           shift and go to state 110
    TkCall          shift and go to state 111
    TkTopCall       shift and go to state 112
    TkPar           shift and go to state 26


state 95

    (26) nodedata -> TkOpenBracket constraints TkCloseBracket TkOpenBracket stackexpr . TkCloseBracket

    TkCloseBracket  shift and go to state 113


state 96

    (17) stackexpr -> param . stackexpr
    (16) stackexpr -> .
    (17) stackexpr -> . param stackexpr
    (18) stackexpr -> . const stackexpr
    (19) stackexpr -> . TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr
    (20) stackexpr -> . TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
    (21) stackexpr -> . TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 16 (stackexpr -> .)
    TkOpenBracket   shift and go to state 94
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    param                          shift and go to state 96
    stackexpr                      shift and go to state 114
    const                          shift and go to state 97
    name                           shift and go to state 14

state 97

    (18) stackexpr -> const . stackexpr
    (16) stackexpr -> .
    (17) stackexpr -> . param stackexpr
    (18) stackexpr -> . const stackexpr
    (19) stackexpr -> . TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr
    (20) stackexpr -> . TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
    (21) stackexpr -> . TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 16 (stackexpr -> .)
    TkOpenBracket   shift and go to state 94
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    const                          shift and go to state 97
    stackexpr                      shift and go to state 115
    param                          shift and go to state 96
    name                           shift and go to state 14

state 98

    (46) construction -> TkOpenBracket TkChildren multiunit . TkCloseBracket

    TkCloseBracket  shift and go to state 116


state 99

    (48) multiunit -> unit . multiunit
    (49) multiunit -> unit .
    (48) multiunit -> . unit multiunit
    (49) multiunit -> . unit
    (1) unit -> . TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket

    TkCloseBracket  reduce using rule 49 (multiunit -> unit .)
    TkOpenBracket   shift and go to state 2

    unit                           shift and go to state 99
    multiunit                      shift and go to state 117

state 100

    (47) construction -> TkOpenBracket TkLooped TkTo . TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket

    TkOpenBracket   shift and go to state 118


state 101

    (44) multiconstruction -> construction multiconstruction .

    TkCloseBracket  reduce using rule 44 (multiconstruction -> construction multiconstruction .)


state 102

    (27) nodedata -> TkLet assignment TkIn TkOpenBracket expr . TkCloseBracket

    TkCloseBracket  shift and go to state 119


state 103

    (10) assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket . assignment
    (8) assignment -> .
    (9) assignment -> . TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (10) assignment -> . TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment

  ! shift/reduce conflict for TkOpenBracket resolved as shift
    TkValue         reduce using rule 8 (assignment -> .)
    TkIdent         reduce using rule 8 (assignment -> .)
    TkCloseBracket  reduce using rule 8 (assignment -> .)
    TkIn            reduce using rule 8 (assignment -> .)
    TkOpenBracket   shift and go to state 62

  ! TkOpenBracket   [ reduce using rule 8 (assignment -> .) ]

    assignment                     shift and go to state 120

state 104

    (15) expr -> TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr .

    TkOpenBracket   reduce using rule 15 (expr -> TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr .)
    TkValue         reduce using rule 15 (expr -> TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr .)
    TkIdent         reduce using rule 15 (expr -> TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr .)
    TkCloseBracket  reduce using rule 15 (expr -> TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr .)


state 105

    (33) constraints -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket . TkOpenBracket expr TkCloseBracket TkCloseBracket constraints

    TkOpenBracket   shift and go to state 121


state 106

    (37) simplenegative -> TkOpenBracket TkInequal param . TkOpenBracket expr TkCloseBracket TkCloseBracket
    (38) simplenegative -> TkOpenBracket TkInequal param . TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative

    TkOpenBracket   shift and go to state 122


state 107

    (39) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket . expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket
    (40) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket . expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    expr                           shift and go to state 123
    param                          shift and go to state 19
    const                          shift and go to state 20
    name                           shift and go to state 14

state 108

    (36) negative -> TkOpenBracket . TkOr simplenegative TkCloseBracket negative

    TkOr            shift and go to state 67


state 109

    (36) negative -> TkOpenBracket TkOr simplenegative TkCloseBracket negative .

    TkOpenBracket   reduce using rule 36 (negative -> TkOpenBracket TkOr simplenegative TkCloseBracket negative .)
    TkCloseBracket  reduce using rule 36 (negative -> TkOpenBracket TkOr simplenegative TkCloseBracket negative .)


state 110

    (19) stackexpr -> TkOpenBracket TkMul . stackexpr TkCloseBracket stackexpr
    (16) stackexpr -> .
    (17) stackexpr -> . param stackexpr
    (18) stackexpr -> . const stackexpr
    (19) stackexpr -> . TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr
    (20) stackexpr -> . TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
    (21) stackexpr -> . TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 16 (stackexpr -> .)
    TkOpenBracket   shift and go to state 94
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    stackexpr                      shift and go to state 124
    param                          shift and go to state 96
    const                          shift and go to state 97
    name                           shift and go to state 14

state 111

    (20) stackexpr -> TkOpenBracket TkCall . name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkIdent         shift and go to state 9

    name                           shift and go to state 125

state 112

    (21) stackexpr -> TkOpenBracket TkTopCall . name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkIdent         shift and go to state 9

    name                           shift and go to state 126

state 113

    (26) nodedata -> TkOpenBracket constraints TkCloseBracket TkOpenBracket stackexpr TkCloseBracket .

    TkCloseBracket  reduce using rule 26 (nodedata -> TkOpenBracket constraints TkCloseBracket TkOpenBracket stackexpr TkCloseBracket .)


state 114

    (17) stackexpr -> param stackexpr .

    TkCloseBracket  reduce using rule 17 (stackexpr -> param stackexpr .)


state 115

    (18) stackexpr -> const stackexpr .

    TkCloseBracket  reduce using rule 18 (stackexpr -> const stackexpr .)


state 116

    (46) construction -> TkOpenBracket TkChildren multiunit TkCloseBracket .

    TkOpenBracket   reduce using rule 46 (construction -> TkOpenBracket TkChildren multiunit TkCloseBracket .)
    TkCloseBracket  reduce using rule 46 (construction -> TkOpenBracket TkChildren multiunit TkCloseBracket .)


state 117

    (48) multiunit -> unit multiunit .

    TkCloseBracket  reduce using rule 48 (multiunit -> unit multiunit .)


state 118

    (47) construction -> TkOpenBracket TkLooped TkTo TkOpenBracket . name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkIdent         shift and go to state 9

    name                           shift and go to state 127

state 119

    (27) nodedata -> TkLet assignment TkIn TkOpenBracket expr TkCloseBracket .

    TkCloseBracket  reduce using rule 27 (nodedata -> TkLet assignment TkIn TkOpenBracket expr TkCloseBracket .)


state 120

    (10) assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .

    TkOpenBracket   reduce using rule 10 (assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .)
    TkValue         reduce using rule 10 (assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .)
    TkIdent         reduce using rule 10 (assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .)
    TkCloseBracket  reduce using rule 10 (assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .)
    TkIn            reduce using rule 10 (assignment -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment .)


state 121

    (33) constraints -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket . expr TkCloseBracket TkCloseBracket constraints
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    expr                           shift and go to state 128
    param                          shift and go to state 19
    const                          shift and go to state 20
    name                           shift and go to state 14

state 122

    (37) simplenegative -> TkOpenBracket TkInequal param TkOpenBracket . expr TkCloseBracket TkCloseBracket
    (38) simplenegative -> TkOpenBracket TkInequal param TkOpenBracket . expr TkCloseBracket TkCloseBracket simplenegative
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    param                          shift and go to state 19
    expr                           shift and go to state 129
    const                          shift and go to state 20
    name                           shift and go to state 14

state 123

    (39) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr . TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket
    (40) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr . TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative

    TkCloseBracket  shift and go to state 130


state 124

    (19) stackexpr -> TkOpenBracket TkMul stackexpr . TkCloseBracket stackexpr

    TkCloseBracket  shift and go to state 131


state 125

    (20) stackexpr -> TkOpenBracket TkCall name . TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr

    TkOpenBracket   shift and go to state 132


state 126

    (21) stackexpr -> TkOpenBracket TkTopCall name . TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr

    TkOpenBracket   shift and go to state 133


state 127

    (47) construction -> TkOpenBracket TkLooped TkTo TkOpenBracket name . TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket

    TkCloseBracket  shift and go to state 134


state 128

    (33) constraints -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr . TkCloseBracket TkCloseBracket constraints

    TkCloseBracket  shift and go to state 135


state 129

    (37) simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr . TkCloseBracket TkCloseBracket
    (38) simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr . TkCloseBracket TkCloseBracket simplenegative

    TkCloseBracket  shift and go to state 136


state 130

    (39) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket . TkOpenBracket expr TkCloseBracket TkCloseBracket
    (40) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket . TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative

    TkOpenBracket   shift and go to state 137


state 131

    (19) stackexpr -> TkOpenBracket TkMul stackexpr TkCloseBracket . stackexpr
    (16) stackexpr -> .
    (17) stackexpr -> . param stackexpr
    (18) stackexpr -> . const stackexpr
    (19) stackexpr -> . TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr
    (20) stackexpr -> . TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
    (21) stackexpr -> . TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 16 (stackexpr -> .)
    TkOpenBracket   shift and go to state 94
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    stackexpr                      shift and go to state 138
    param                          shift and go to state 96
    const                          shift and go to state 97
    name                           shift and go to state 14

state 132

    (20) stackexpr -> TkOpenBracket TkCall name TkOpenBracket . TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr

    TkArg           shift and go to state 139


state 133

    (21) stackexpr -> TkOpenBracket TkTopCall name TkOpenBracket . TkArg expr TkCloseBracket TkCloseBracket stackexpr

    TkArg           shift and go to state 140


state 134

    (47) construction -> TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket . TkOpenBracket assignment TkCloseBracket TkCloseBracket

    TkOpenBracket   shift and go to state 141


state 135

    (33) constraints -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket . TkCloseBracket constraints

    TkCloseBracket  shift and go to state 142


state 136

    (37) simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket . TkCloseBracket
    (38) simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket . TkCloseBracket simplenegative

    TkCloseBracket  shift and go to state 143


state 137

    (39) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket . expr TkCloseBracket TkCloseBracket
    (40) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket . expr TkCloseBracket TkCloseBracket simplenegative
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    expr                           shift and go to state 144
    param                          shift and go to state 19
    const                          shift and go to state 20
    name                           shift and go to state 14

state 138

    (19) stackexpr -> TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr .

    TkCloseBracket  reduce using rule 19 (stackexpr -> TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr .)


state 139

    (20) stackexpr -> TkOpenBracket TkCall name TkOpenBracket TkArg . stackexpr TkCloseBracket TkCloseBracket stackexpr
    (16) stackexpr -> .
    (17) stackexpr -> . param stackexpr
    (18) stackexpr -> . const stackexpr
    (19) stackexpr -> . TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr
    (20) stackexpr -> . TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
    (21) stackexpr -> . TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 16 (stackexpr -> .)
    TkOpenBracket   shift and go to state 94
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    name                           shift and go to state 14
    stackexpr                      shift and go to state 145
    param                          shift and go to state 96
    const                          shift and go to state 97

state 140

    (21) stackexpr -> TkOpenBracket TkTopCall name TkOpenBracket TkArg . expr TkCloseBracket TkCloseBracket stackexpr
    (11) expr -> .
    (12) expr -> . param expr
    (13) expr -> . const expr
    (14) expr -> . TkOpenBracket TkMul expr TkCloseBracket expr
    (15) expr -> . TkOpenBracket TkCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket expr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 11 (expr -> .)
    TkOpenBracket   shift and go to state 31
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    name                           shift and go to state 14
    expr                           shift and go to state 146
    param                          shift and go to state 19
    const                          shift and go to state 20

state 141

    (47) construction -> TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket . assignment TkCloseBracket TkCloseBracket
    (8) assignment -> .
    (9) assignment -> . TkOpenBracket TkAssign param TkOpenBracket expr TkCloseBracket TkCloseBracket assignment
    (10) assignment -> . TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket assignment

    TkCloseBracket  reduce using rule 8 (assignment -> .)
    TkOpenBracket   shift and go to state 62

    assignment                     shift and go to state 147

state 142

    (33) constraints -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket . constraints
    (32) constraints -> .
    (33) constraints -> . TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints
    (34) constraints -> . negative constraints
    (35) negative -> .
    (36) negative -> . TkOpenBracket TkOr simplenegative TkCloseBracket negative

  ! shift/reduce conflict for TkOpenBracket resolved as shift
  ! reduce/reduce conflict for TkCloseBracket resolved using rule 32 (constraints -> .)
    TkCloseBracket  reduce using rule 32 (constraints -> .)
    TkOpenBracket   shift and go to state 57

  ! TkOpenBracket   [ reduce using rule 35 (negative -> .) ]
  ! TkCloseBracket  [ reduce using rule 35 (negative -> .) ]

    constraints                    shift and go to state 148
    negative                       shift and go to state 59

state 143

    (37) simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket .
    (38) simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket . simplenegative
    (37) simplenegative -> . TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket
    (38) simplenegative -> . TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative
    (39) simplenegative -> . TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket
    (40) simplenegative -> . TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative

    TkCloseBracket  reduce using rule 37 (simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket .)
    TkOpenBracket   shift and go to state 78

    simplenegative                 shift and go to state 149

state 144

    (39) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr . TkCloseBracket TkCloseBracket
    (40) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr . TkCloseBracket TkCloseBracket simplenegative

    TkCloseBracket  shift and go to state 150


state 145

    (20) stackexpr -> TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr . TkCloseBracket TkCloseBracket stackexpr

    TkCloseBracket  shift and go to state 151


state 146

    (21) stackexpr -> TkOpenBracket TkTopCall name TkOpenBracket TkArg expr . TkCloseBracket TkCloseBracket stackexpr

    TkCloseBracket  shift and go to state 152


state 147

    (47) construction -> TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment . TkCloseBracket TkCloseBracket

    TkCloseBracket  shift and go to state 153


state 148

    (33) constraints -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints .

    TkCloseBracket  reduce using rule 33 (constraints -> TkOpenBracket TkAreEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket constraints .)


state 149

    (38) simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative .

    TkCloseBracket  reduce using rule 38 (simplenegative -> TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative .)


state 150

    (39) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket . TkCloseBracket
    (40) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket . TkCloseBracket simplenegative

    TkCloseBracket  shift and go to state 154


state 151

    (20) stackexpr -> TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket . TkCloseBracket stackexpr

    TkCloseBracket  shift and go to state 155


state 152

    (21) stackexpr -> TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket . TkCloseBracket stackexpr

    TkCloseBracket  shift and go to state 156


state 153

    (47) construction -> TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket . TkCloseBracket

    TkCloseBracket  shift and go to state 157


state 154

    (39) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket .
    (40) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket . simplenegative
    (37) simplenegative -> . TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket
    (38) simplenegative -> . TkOpenBracket TkInequal param TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative
    (39) simplenegative -> . TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket
    (40) simplenegative -> . TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative

    TkCloseBracket  reduce using rule 39 (simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket .)
    TkOpenBracket   shift and go to state 78

    simplenegative                 shift and go to state 158

state 155

    (20) stackexpr -> TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket . stackexpr
    (16) stackexpr -> .
    (17) stackexpr -> . param stackexpr
    (18) stackexpr -> . const stackexpr
    (19) stackexpr -> . TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr
    (20) stackexpr -> . TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
    (21) stackexpr -> . TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 16 (stackexpr -> .)
    TkOpenBracket   shift and go to state 94
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    name                           shift and go to state 14
    stackexpr                      shift and go to state 159
    param                          shift and go to state 96
    const                          shift and go to state 97

state 156

    (21) stackexpr -> TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket . stackexpr
    (16) stackexpr -> .
    (17) stackexpr -> . param stackexpr
    (18) stackexpr -> . const stackexpr
    (19) stackexpr -> . TkOpenBracket TkMul stackexpr TkCloseBracket stackexpr
    (20) stackexpr -> . TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr
    (21) stackexpr -> . TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr
    (22) param -> . TkOpenBracket TkPar class name TkCloseBracket
    (28) const -> . TkValue
    (29) const -> . name
    (30) const -> . TkValue const
    (31) const -> . name const
    (6) name -> . TkIdent
    (7) name -> . TkIdent name

    TkCloseBracket  reduce using rule 16 (stackexpr -> .)
    TkOpenBracket   shift and go to state 94
    TkValue         shift and go to state 21
    TkIdent         shift and go to state 9

    name                           shift and go to state 14
    stackexpr                      shift and go to state 160
    param                          shift and go to state 96
    const                          shift and go to state 97

state 157

    (47) construction -> TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket .

    TkOpenBracket   reduce using rule 47 (construction -> TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket .)
    TkCloseBracket  reduce using rule 47 (construction -> TkOpenBracket TkLooped TkTo TkOpenBracket name TkCloseBracket TkOpenBracket assignment TkCloseBracket TkCloseBracket .)


state 158

    (40) simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative .

    TkCloseBracket  reduce using rule 40 (simplenegative -> TkOpenBracket TkNotEqual TkOpenBracket expr TkCloseBracket TkOpenBracket expr TkCloseBracket TkCloseBracket simplenegative .)


state 159

    (20) stackexpr -> TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr .

    TkCloseBracket  reduce using rule 20 (stackexpr -> TkOpenBracket TkCall name TkOpenBracket TkArg stackexpr TkCloseBracket TkCloseBracket stackexpr .)


state 160

    (21) stackexpr -> TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr .

    TkCloseBracket  reduce using rule 21 (stackexpr -> TkOpenBracket TkTopCall name TkOpenBracket TkArg expr TkCloseBracket TkCloseBracket stackexpr .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TkIdent in state 9 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 12 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 12 resolved as shift
WARNING: shift/reduce conflict for TkValue in state 12 resolved as shift
WARNING: shift/reduce conflict for TkIdent in state 12 resolved as shift
WARNING: shift/reduce conflict for TkValue in state 14 resolved as shift
WARNING: shift/reduce conflict for TkIdent in state 14 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 16 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 16 resolved as shift
WARNING: shift/reduce conflict for TkValue in state 16 resolved as shift
WARNING: shift/reduce conflict for TkIdent in state 16 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 19 resolved as shift
WARNING: shift/reduce conflict for TkValue in state 19 resolved as shift
WARNING: shift/reduce conflict for TkIdent in state 19 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 20 resolved as shift
WARNING: shift/reduce conflict for TkValue in state 20 resolved as shift
WARNING: shift/reduce conflict for TkIdent in state 20 resolved as shift
WARNING: shift/reduce conflict for TkValue in state 21 resolved as shift
WARNING: shift/reduce conflict for TkIdent in state 21 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 46 resolved as shift
WARNING: shift/reduce conflict for TkValue in state 46 resolved as shift
WARNING: shift/reduce conflict for TkIdent in state 46 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 49 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 59 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 74 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 89 resolved as shift
WARNING: shift/reduce conflict for TkValue in state 89 resolved as shift
WARNING: shift/reduce conflict for TkIdent in state 89 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 93 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 103 resolved as shift
WARNING: shift/reduce conflict for TkOpenBracket in state 142 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (multi_expression -> <empty>)
WARNING: rejected rule (assignment -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (assignment -> <empty>)
WARNING: rejected rule (expr -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (multi_expression -> <empty>)
WARNING: rejected rule (expr -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 16 resolved using rule (multi_expression -> <empty>)
WARNING: rejected rule (assignment -> <empty>) in state 16
WARNING: reduce/reduce conflict in state 16 resolved using rule (assignment -> <empty>)
WARNING: rejected rule (expr -> <empty>) in state 16
WARNING: reduce/reduce conflict in state 16 resolved using rule (multi_expression -> <empty>)
WARNING: rejected rule (expr -> <empty>) in state 16
WARNING: reduce/reduce conflict in state 49 resolved using rule (constraints -> <empty>)
WARNING: rejected rule (negative -> <empty>) in state 49
WARNING: reduce/reduce conflict in state 59 resolved using rule (constraints -> <empty>)
WARNING: rejected rule (negative -> <empty>) in state 59
WARNING: reduce/reduce conflict in state 142 resolved using rule (constraints -> <empty>)
WARNING: rejected rule (negative -> <empty>) in state 142
