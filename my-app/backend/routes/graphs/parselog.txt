INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(TkOpenBracket,'(',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : TkOpenBracket . LexToken(TkNode,'Node',1,1)
DEBUG:root:Action : Shift and goto state 3
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : TkOpenBracket TkNode . LexToken(TkOpenBracket,'(',1,6)
DEBUG:root:Action : Shift and goto state 4
DEBUG:root:
DEBUG:root:State  : 4
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket . LexToken(TkStatus,'Finished',1,7)
DEBUG:root:Action : Shift and goto state 5
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus . LexToken(TkCloseBracket,')',1,15)
DEBUG:root:Action : Shift and goto state 6
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket . LexToken(TkOpenBracket,'(',1,16)
DEBUG:root:Action : Shift and goto state 7
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket . LexToken(TkIdent,'0',1,17)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket TkIdent . LexToken(TkCloseBracket,')',1,19)
INFO:root:Action : Reduce rule [name -> TkIdent] with ['0'] and goto state 8
INFO:root:Result : <str @ 0x7fb902ba8eb0> ('0')
DEBUG:root:
DEBUG:root:State  : 8
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name . LexToken(TkCloseBracket,')',1,19)
DEBUG:root:Action : Shift and goto state 10
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket . LexToken(TkOpenBracket,'(',1,20)
DEBUG:root:Action : Shift and goto state 12
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket . LexToken(TkCloseBracket,')',1,21)
INFO:root:Action : Reduce rule [multi_expression -> <empty>] with [] and goto state 15
INFO:root:Result : <list @ 0x7fb9023b7300> ([])
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression . LexToken(TkCloseBracket,')',1,21)
DEBUG:root:Action : Shift and goto state 28
DEBUG:root:
DEBUG:root:State  : 28
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket . LexToken(TkOpenBracket,'(',1,22)
DEBUG:root:Action : Shift and goto state 43
DEBUG:root:
DEBUG:root:State  : 43
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket . LexToken(TkOpenBracket,'(',1,23)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket . LexToken(TkCloseBracket,')',1,24)
INFO:root:Action : Reduce rule [constraints -> <empty>] with [] and goto state 58
INFO:root:Result : <str @ 0x7fb902cf3450> ('ε')
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints . LexToken(TkCloseBracket,')',1,24)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints TkCloseBracket . LexToken(TkOpenBracket,'(',1,25)
DEBUG:root:Action : Shift and goto state 80
DEBUG:root:
DEBUG:root:State  : 80
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints TkCloseBracket TkOpenBracket . LexToken(TkIdent,'ab',1,26)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints TkCloseBracket TkOpenBracket TkIdent . LexToken(TkValue,'-c--d',1,28)
INFO:root:Action : Reduce rule [name -> TkIdent] with ['ab'] and goto state 14
INFO:root:Result : <str @ 0x7fb9023b7c30> ('ab')
DEBUG:root:
DEBUG:root:State  : 14
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints TkCloseBracket TkOpenBracket name . LexToken(TkValue,'-c--d',1,28)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints TkCloseBracket TkOpenBracket name TkValue . LexToken(TkCloseBracket,')',1,33)
INFO:root:Action : Reduce rule [const -> TkValue] with ['-c--d'] and goto state 27
INFO:root:Result : <str @ 0x7fb9023b7cb0> ('-c--d')
DEBUG:root:
DEBUG:root:State  : 27
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints TkCloseBracket TkOpenBracket name const . LexToken(TkCloseBracket,')',1,33)
INFO:root:Action : Reduce rule [const -> name const] with ['ab','-c--d'] and goto state 97
INFO:root:Result : <str @ 0x7fb9023b7df0> ('ab -c--d')
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints TkCloseBracket TkOpenBracket const . LexToken(TkCloseBracket,')',1,33)
INFO:root:Action : Reduce rule [stackexpr -> <empty>] with [] and goto state 115
INFO:root:Result : <str @ 0x7fb902cf3450> ('ε')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Defaulted state 115: Reduce using 18
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints TkCloseBracket TkOpenBracket const stackexpr . LexToken(TkCloseBracket,')',1,33)
INFO:root:Action : Reduce rule [stackexpr -> const stackexpr] with ['ab -c--d','ε'] and goto state 95
INFO:root:Result : <StackExpr @ 0x7fb9023b6a00> (<__main__.StackExpr object at 0x7fb9023b ...)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints TkCloseBracket TkOpenBracket stackexpr . LexToken(TkCloseBracket,')',1,33)
DEBUG:root:Action : Shift and goto state 113
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Defaulted state 113: Reduce using 26
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket TkOpenBracket constraints TkCloseBracket TkOpenBracket stackexpr TkCloseBracket . None
INFO:root:Action : Reduce rule [nodedata -> TkOpenBracket constraints TkCloseBracket TkOpenBracket stackexpr TkCloseBracket] with ['(','ε',')','(',<StackExpr @ 0x7fb9023b6a00>,')'] and goto state 50
INFO:root:Result : <NodeData @ 0x7fb9023b6910> (<__main__.NodeData object at 0x7fb9023b6 ...)
DEBUG:root:
DEBUG:root:State  : 50
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata . LexToken(TkCloseBracket,')',1,34)
DEBUG:root:Action : Shift and goto state 60
DEBUG:root:
DEBUG:root:State  : 60
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket . LexToken(TkCloseBracket,')',1,35)
INFO:root:Action : Reduce rule [links -> <empty>] with [] and goto state 71
INFO:root:Result : <str @ 0x7fb902cf3450> ('ε')
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links . LexToken(TkCloseBracket,')',1,35)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket . $end
INFO:root:Action : Reduce rule [unit -> TkOpenBracket TkNode TkOpenBracket TkStatus TkCloseBracket TkOpenBracket name TkCloseBracket TkOpenBracket multi_expression TkCloseBracket TkOpenBracket nodedata TkCloseBracket links TkCloseBracket] with ['(','Node','(','Finished',')','(','0',')','(',[],')','(',<NodeData @ 0x7fb9023b6910>,')','ε',')'] and goto state 1
INFO:root:Result : <Node @ 0x7fb9023b67f0> (<__main__.Node object at 0x7fb9023b67f0>)
DEBUG:root:
DEBUG:root:State  : 1
DEBUG:root:Stack  : unit . $end
INFO:root:Done   : Returning <Node @ 0x7fb9023b67f0> (<__main__.Node object at 0x7fb9023b67f0>)
INFO:root:PLY: PARSE DEBUG END
DEBUG:graphviz.saving:write lines to 'img'
DEBUG:graphviz.backend.execute:run [PosixPath('dot'), '-Kdot', '-Tpng', '-O', 'img']
DEBUG:graphviz.saving:write lines to 'img'
DEBUG:graphviz.backend.execute:run [PosixPath('dot'), '-Kdot', '-Tpng', '-O', 'img']
DEBUG:graphviz.backend.viewing:view: ['xdg-open', 'img.png']
